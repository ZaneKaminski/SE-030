|--------------------------------------------------------------|
|- ispLEVER Classic 2.0.00.17.20.15 Fitter Report File        -|
|- Copyright(C), 1992-2012, Lattice Semiconductor Corporation -|
|- All Rights Reserved.                                       -|
|--------------------------------------------------------------|




The Basic/Detailed Report Format can be selected in the dialog box
Tools->Fitter Report File Format...

Project_Summary
~~~~~~~~~~~~~~~
Project Name         :  macceleratorse_lc4256c
Project Path         :  C:\Users\zanek\Documents\GitHub\SE-030\cpld\LC4256C
Project Fitted on    :  Mon Oct 04 02:47:56 2021

Device               :  M4256_64
Package              :  100
GLB Input Mux Size   :  33
Available Blocks     :  16
Speed                :  -10
Part Number          :  LC4256C-10T100I
Source Format        :  Pure_Verilog_HDL


// Project 'macceleratorse_lc4256c' Fit Successfully! //


Compilation_Times
~~~~~~~~~~~~~~~~~
Prefit Time                     0 secs
Load Design Time                0.06 secs
Partition Time                  0.06 secs
Place Time                      0.00 secs
Route Time                      0.00 secs
Total Fit Time                  00:00:01


Design_Summary
~~~~~~~~~~~~~~
Total Input Pins                35
Total Logic Functions           93
  Total Output Pins             32
  Total Bidir I/O Pins          0
  Total Buried Nodes            61
Total Flip-Flops                60
  Total D Flip-Flops            55
  Total T Flip-Flops            5
  Total Latches                 0
Total Product Terms             421

Total Reserved Pins             0
Total Locked Pins               7
Total Locked Nodes              0

Total Unique Output Enables     0
Total Unique Clocks             5
Total Unique Clock Enables      15
Total Unique Resets             1
Total Unique Presets            0

Fmax Logic Levels               2


Device_Resource_Summary
~~~~~~~~~~~~~~~~~~~~~~~
                                 Device
                                 Total    Used   Not Used   Utilization
-----------------------------------------------------------------------
Dedicated Pins
  Clock/Input Pins                  4        4      0    -->   100
  Input-Only Pins                   6        6      0    -->   100
  I/O / Enable Pins                 2        2      0    -->   100
I/O Pins                           62       55      7    -->    88
Logic Functions                   256       93    163    -->    36
  Input Registers                  64        0     64    -->     0

GLB Inputs                        576      290    286    -->    50
Logical Product Terms            1280      351    929    -->    27
Occupied GLBs                      16       16      0    -->   100
Macrocells                        256       93    163    -->    36

Control Product Terms:
  GLB Clock/Clock Enables          16       12      4    -->    75
  GLB Reset/Presets                16        0     16    -->     0
  Macrocell Clocks                256        1    255    -->     0
  Macrocell Clock Enables         256       14    242    -->     5
  Macrocell Enables               256        0    256    -->     0
  Macrocell Resets                256        1    255    -->     0
  Macrocell Presets               256        0    256    -->     0

Global Routing Pool               324       99    225    -->    30
  GRP from IFB                     ..       29     ..    -->    ..
    (from input signals)           ..       29     ..    -->    ..
    (from output signals)          ..        0     ..    -->    ..
    (from bidir signals)           ..        0     ..    -->    ..
  GRP from MFB                     ..       70     ..    -->    ..
----------------------------------------------------------------------

<Note> 1 : The available PT is the product term that has not been used.
<Note> 2 : IFB is I/O feedback.
<Note> 3 : MFB is macrocell feedback.



GLB_Resource_Summary
~~~~~~~~~~~~~~~~~~~~
                                                                                     # of PT
               ---  Fanin  ---    I/O    Input  Macrocells       Macrocells   Logic  clusters
             Unique Shared Total  Pins    Regs Used Inaccessible  available    PTs   used
-------------------------------------------------------------------------------------------
Maximum
  GLB                      36      *(1)     8   --     --             16       80       16
-------------------------------------------------------------------------------------------
  GLB    A     15     9    24      3/4      0    6      0             10       31        8
  GLB    B      5     8    13      4/4      0    6      0             10       22        8
  GLB    C      7    15    22      3/4      0    4      0             12       24        7
  GLB    D      2    13    15      3/4      0    4      0             12       24        6
-------------------------------------------------------------------------------------------
  GLB    E     10    10    20      3/4      0    5      1             10       20        7
  GLB    F      2     9    11      4/4      0   10      0              6       27       10
  GLB    G      4     8    12      3/4      0   10      0              6       18       10
  GLB    H      3    17    20      4/4      0    6      0             10       31        9
-------------------------------------------------------------------------------------------
  GLB    I      4    11    15      3/4      0    4      1             11       21        6
  GLB    J     10     9    19      4/4      0    6      0             10       17        7
  GLB    K     16     8    24      4/4      0    6      0             10       21        7
  GLB    L     11     9    20      4/4      0    5      0             11       16        5
-------------------------------------------------------------------------------------------
  GLB    M     18     8    26      3/4      0    3      2             11       30        7
  GLB    N      3    17    20      3/4      0    6      0             10       25        8
  GLB    O     12     1    13      4/4      0    5      0             11       10        5
  GLB    P     12     4    16      3/4      0    7      0              9       14        7
-------------------------------------------------------------------------------------------
TOTALS:       134   156   290     55/64     0   93      4            159      351      117

<Note> 1 : For ispMACH 4000 devices, the number of IOs depends on the GLB.
<Note> 2 : Four rightmost columns above reflect last status of the placement process.



GLB_Control_Summary
~~~~~~~~~~~~~~~~~~~
           Shared Shared | Mcell  Mcell  Mcell  Mcell  Mcell 
           Clk/CE Rst/Pr | Clock  CE     Enable Reset  Preset
------------------------------------------------------------------------------
Maximum
  GLB        1      1        16     16     16     16     16  
==============================================================================
  GLB    A   1      0         0      2      0      1      0
  GLB    B   0      0         0      4      0      0      0
  GLB    C   0      0         0      0      0      0      0
  GLB    D   1      0         0      1      0      0      0
------------------------------------------------------------------------------
  GLB    E   1      0         0      0      0      0      0
  GLB    F   1      0         0      0      0      0      0
  GLB    G   1      0         0      0      0      0      0
  GLB    H   0      0         0      2      0      0      0
------------------------------------------------------------------------------
  GLB    I   1      0         0      0      0      0      0
  GLB    J   1      0         0      0      0      0      0
  GLB    K   1      0         0      2      0      0      0
  GLB    L   1      0         1      1      0      0      0
------------------------------------------------------------------------------
  GLB    M   0      0         0      0      0      0      0
  GLB    N   1      0         0      1      0      0      0
  GLB    O   1      0         0      0      0      0      0
  GLB    P   1      0         0      1      0      0      0
------------------------------------------------------------------------------

<Note> 1 : For ispMACH 4000 devices, the number of output enables depends on the GLB.



Optimizer_and_Fitter_Options
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Pin Assignment :                       No
Group Assignment :                     No
Pin Reservation :                      No

@Ignore_Project_Constraints :
  Pin Assignments :                    No
      Keep Block Assignment            --
      Keep Segment Assignment          --
  Group Assignments :                  No
  Macrocell Assignment :               No
      Keep Block Assignment            --
      Keep Segment Assignment          --

@Backannotate_Project_Constraints
  Pin Assignments :                    No
  Pin And Block Assignments :          No
  Pin, Macrocell and Block :           No

@Timing_Constraints :                  No

@Global_Project_Optimization :
  Balanced Partitioning :              Yes
  Spread Placement :                   Yes

  Note :
    Pack Design :
       Balanced Partitioning = No
       Spread Placement      = No
    Spread Design :
       Balanced Partitioning = Yes
       Spread Placement      = Yes


@Logic_Synthesis :
  Logic Reduction :                    Yes
  Node Collapsing :                    FMAX
  Fmax_Logic_Level :                   1
  D/T Synthesis :                      Yes
  XOR Synthesis :                      Yes
  Max. P-Term for Collapsing :         16
  Max. P-Term for Splitting :          80
  Max Symbols :                        24

@Utilization_options
  Max. % of Macrocells used :          100
@Usercode                               (HEX)
@IO_Types                              Default = LVCMOS18 (2)
@Output_Slew_Rate                      Default = FAST (2)
@Power                                 Default = HIGH (2)
@Pull                                  Default = PULLUP_UP (2)
@Fast_Bypass                           Default = None (2)
@ORP_Bypass                            Default = None
@Input_Registers                       Default = None (2)
@Register_Powerup                      Default = None

Device Options:
<Note> 1 : Reserved unused I/Os can be independently driven to Low or High, and does not
           follow the drive level set for the Global Configure Unused I/O Option.
<Note> 2 : For user-specified constraints on individual signals, refer to the Output,
           Bidir and Buried Signal Lists.



Pinout_Listing
~~~~~~~~~~~~~~
      | Pin   | Bank |GLB |Assigned|                 | Signal|
Pin No| Type  |Number|Pad |Pin     |     I/O Type    | Type  | Signal name
------------------------------------------------------------------------------------
1     | GND   |   -  |    |        |                 |       |
2     | TDI   |   -  |    |        |                 |       |
3     |  I_O  |   0  |C12 |        |                 |       |
4     |  I_O  |   0  |C10 |        |LVCMOS18         | Output|nBERR_FSB
5     |  I_O  |   0  |C6  |        |LVCMOS18         | Output|RA_10_
6     |  I_O  |   0  |C2  |        |LVCMOS18         | Input |E_IOB
7     |GNDIO0 |   -  |    |        |                 |       |
8     |  I_O  |   0  |D12 |        |                 |       |
9     |  I_O  |   0  |D10 |        |LVCMOS18         | Input |A_FSB_4_
10    |  I_O  |   0  |D6  |        |LVCMOS18         | Input |A_FSB_11_
11    |  I_O  |   0  |D4  |        |LVCMOS18         | Input |nWE_FSB
12    | IN0   |   0  |    |    *   |LVCMOS18         | Input |nRES
13    |VCCIO0 |   -  |    |        |                 |       |
14    |  I_O  |   0  |E4  |        |LVCMOS18         | Input |A_FSB_17_
15    |  I_O  |   0  |E6  |        |LVCMOS18         | Input |nLDS_FSB
16    |  I_O  |   0  |E10 |        |                 |       |
17    |  I_O  |   0  |E12 |        |LVCMOS18         | Output|nOE
18    |GNDIO0 |   -  |    |        |                 |       |
19    |  I_O  |   0  |F2  |        |LVCMOS18         | Output|nVMA_IOB
20    |  I_O  |   0  |F6  |        |LVCMOS18         | Input |A_FSB_16_
21    |  I_O  |   0  |F10 |        |LVCMOS18         | Input |nUDS_FSB
22    |  I_O  |   0  |F12 |        |LVCMOS18         | Input |A_FSB_2_
23    | IN1   |   0  |    |    *   |LVCMOS18         | Input |A_FSB_22_
24    | TCK   |   -  |    |        |                 |       |
25    | VCC   |   -  |    |        |                 |       |
26    | GND   |   -  |    |        |                 |       |
27    | IN2   |   0  |    |    *   |LVCMOS18         | Input |A_FSB_21_
28    |  I_O  |   0  |G12 |        |                 |       |
29    |  I_O  |   0  |G10 |        |LVCMOS18         | Input |A_FSB_3_
30    |  I_O  |   0  |G6  |        |LVCMOS18         | Input |A_FSB_9_
31    |  I_O  |   0  |G2  |        |LVCMOS18         | Input |A_FSB_23_
32    |GNDIO0 |   -  |    |        |                 |       |
33    |VCCIO0 |   -  |    |        |                 |       |
34    |  I_O  |   0  |H12 |        |LVCMOS18         | Input |nDTACK_IOB
35    |  I_O  |   0  |H10 |        |LVCMOS18         | Input |nAS_FSB
36    |  I_O  |   0  |H6  |        |LVCMOS18         | Output|nRAMUWE
37    |  I_O  |   0  |H2  |        |LVCMOS18         | Output|nRAMLWE
38    |INCLK1 |   0  |    |    *   |LVCMOS18         | Input |nBERR_IOB
39    |INCLK2 |   1  |    |        |LVCMOS18         | Input |CLK_FSB
40    | VCC   |   -  |    |        |                 |       |
41    |  I_O  |   1  |I2  |        |LVCMOS18         | Output|nROMCS
42    |  I_O  |   1  |I6  |        |LVCMOS18         | Output|nVPA_FSB
43    |  I_O  |   1  |I10 |        |LVCMOS18         | Input |A_FSB_15_
44    |  I_O  |   1  |I12 |        |                 |       |
45    |VCCIO1 |   -  |    |        |                 |       |
46    |GNDIO1 |   -  |    |        |                 |       |
47    |  I_O  |   1  |J2  |        |LVCMOS18         | Output|nUDS_IOB
48    |  I_O  |   1  |J6  |        |LVCMOS18         | Output|nDoutOE
49    |  I_O  |   1  |J10 |        |LVCMOS18         | Output|nDinLE
50    |  I_O  |   1  |J12 |        |LVCMOS18         | Input |A_FSB_12_
51    | GND   |   -  |    |        |                 |       |
52    | TMS   |   -  |    |        |                 |       |
53    |  I_O  |   1  |K12 |        |LVCMOS18         | Input |A_FSB_10_
54    |  I_O  |   1  |K10 |        |LVCMOS18         | Output|nADoutLE0
55    |  I_O  |   1  |K6  |        |LVCMOS18         | Output|nDinOE
56    |  I_O  |   1  |K2  |        |LVCMOS18         | Output|nLDS_IOB
57    |GNDIO1 |   -  |    |        |                 |       |
58    |  I_O  |   1  |L12 |        |LVCMOS18         | Output|nAS_IOB
59    |  I_O  |   1  |L10 |        |LVCMOS18         | Input |A_FSB_6_
60    |  I_O  |   1  |L6  |        |LVCMOS18         | Output|nDTACK_FSB
61    |  I_O  |   1  |L4  |        |LVCMOS18         | Output|nRAS
62    | IN3   |   1  |    |    *   |LVCMOS18         | Input |A_FSB_20_
63    |VCCIO1 |   -  |    |        |                 |       |
64    |  I_O  |   1  |M4  |        |LVCMOS18         | Output|nROMWE
65    |  I_O  |   1  |M6  |        |LVCMOS18         | Output|nADoutLE1
66    |  I_O  |   1  |M10 |        |LVCMOS18         | Input |A_FSB_5_
67    |  I_O  |   1  |M12 |        |                 |       |
68    |GNDIO1 |   -  |    |        |                 |       |
69    |  I_O  |   1  |N2  |        |LVCMOS18         | Output|nCAS
70    |  I_O  |   1  |N6  |        |LVCMOS18         | Output|RA_9_
71    |  I_O  |   1  |N10 |        |LVCMOS18         | Output|RA_5_
72    |  I_O  |   1  |N12 |        |                 |       |
73    | IN4   |   1  |    |    *   |LVCMOS18         | Input |A_FSB_19_
74    | TDO   |   -  |    |        |                 |       |
75    | VCC   |   -  |    |        |                 |       |
76    | GND   |   -  |    |        |                 |       |
77    | IN5   |   1  |    |    *   |LVCMOS18         | Input |A_FSB_18_
78    |  I_O  |   1  |O12 |        |LVCMOS18         | Output|RA_2_
79    |  I_O  |   1  |O10 |        |LVCMOS18         | Output|RA_8_
80    |  I_O  |   1  |O6  |        |LVCMOS18         | Output|RA_4_
81    |  I_O  |   1  |O2  |        |LVCMOS18         | Output|RA_6_
82    |GNDIO1 |   -  |    |        |                 |       |
83    |VCCIO1 |   -  |    |        |                 |       |
84    |  I_O  |   1  |P12 |        |LVCMOS18         | Output|RA_0_
85    |  I_O  |   1  |P10 |        |LVCMOS18         | Output|RA_7_
86    |  I_O  |   1  |P6  |        |LVCMOS18         | Output|RA_1_
87    | I_O/OE|   1  |P2  |        |LVCMOS18         | Output|RA_3_
88    |INCLK3 |   1  |    |        |LVCMOS18         | Input |CLK2X_IOB
89    |INCLK0 |   0  |    |        |LVCMOS18         | Input |CLK_IOB
90    | VCC   |   -  |    |        |                 |       |
91    | I_O/OE|   0  |A2  |        |LVCMOS18         | Output|RA_11_
92    |  I_O  |   0  |A6  |        |LVCMOS18         | Input |A_FSB_14_
93    |  I_O  |   0  |A10 |        |LVCMOS18         | Input |A_FSB_8_
94    |  I_O  |   0  |A12 |        |LVCMOS18         | Input |nVPA_IOB
95    |VCCIO0 |   -  |    |        |                 |       |
96    |GNDIO0 |   -  |    |        |                 |       |
97    |  I_O  |   0  |B2  |        |LVCMOS18         | Input |A_FSB_13_
98    |  I_O  |   0  |B6  |        |LVCMOS18         | Input |A_FSB_7_
99    |  I_O  |   0  |B10 |        |LVCMOS18         | Output|nAoutOE
100   |  I_O  |   0  |B12 |        |LVCMOS18         | Input |A_FSB_1_
------------------------------------------------------------------------------------

<Note> GLB Pad : This notation refers to the GLB I/O pad number in the device.
<Note> Assigned Pin : user or dedicated input assignment (E.g. Clock pins).
<Note> Pin Type : 
          ClkIn : Dedicated input or clock pin 
           CLK  : Dedicated clock pin
           I_O  : Input/Output pin
           INP  : Dedicated input pin
           JTAG : JTAG Control and test pin
           NC   : No connected



Input_Signal_List
~~~~~~~~~~~~~~~~~
                Input
         Pin    Fanout
 Pin GLB Type                       Pullup Signal
-----------------------------------------------------
  53   K  I/O   2  ------------M--P      Up A_FSB_10_
  10   D  I/O   2  ------------M--P      Up A_FSB_11_
  50   J  I/O   2  ------------M-O-      Up A_FSB_12_
  97   B  I/O   2  ------------M--P      Up A_FSB_13_
  92   A  I/O   2  ------------M-O-      Up A_FSB_14_
  43   I  I/O   2  ------------MN--      Up A_FSB_15_
  20   F  I/O   7  A-C-E--H----MNO-      Up A_FSB_16_
  14   E  I/O   7  A-C-E--H----MN-P      Up A_FSB_17_
  77  --  IN       ----------------      Up A_FSB_18_
  73  --  IN       ----------------      Up A_FSB_19_
 100   B  I/O   1  ---------------P      Up A_FSB_1_
  62  --  IN       ----------------      Up A_FSB_20_
  27  --  IN       ----------------      Up A_FSB_21_
  23  --  IN       ----------------      Up A_FSB_22_
  31   G  I/O   11 A-CDE--HIJKLMN--      Up A_FSB_23_
  22   F  I/O   1  ---------------P      Up A_FSB_2_
  29   G  I/O   1  --------------O-      Up A_FSB_3_
   9   D  I/O   1  ---------------P      Up A_FSB_4_
  66   M  I/O   1  --------------O-      Up A_FSB_5_
  59   L  I/O   1  -------------N--      Up A_FSB_6_
  98   B  I/O   1  --------------O-      Up A_FSB_7_
  93   A  I/O   2  ------------M--P      Up A_FSB_8_
  30   G  I/O   2  ------------M-O-      Up A_FSB_9_
  88  -- INCLK  3  ---------JKL----      Up CLK2X_IOB
  39  -- INCLK  1  -------------N--      Up CLK_FSB
  89  -- INCLK  1  -B--------------      Up CLK_IOB
   6   C  I/O   1  -------H--------      Up E_IOB
  35   H  I/O   13 ABCDE-GHIJKLMN--      Up nAS_FSB
  38  -- INCLK  2  -BC-------------      Up nBERR_IOB
  34   H  I/O   2  -BC-------------      Up nDTACK_IOB
  15   E  I/O   4  ----E--H----M--P      Up nLDS_FSB
  12  --  IN       ----------------      Up nRES
  21   F  I/O   4  ----E--H----M--P      Up nUDS_FSB
  94   A  I/O   2  --C--F----------      Up nVPA_IOB
  11   D  I/O   8  A-C-E--H--K-MNO-      Up nWE_FSB
-----------------------------------------------------



Output_Signal_List
~~~~~~~~~~~~~~~~~~
          I         C      P R P       O Output
          N         L Mc   R E U C O F B Fanout
 Pin GLB  P LL PTs  S Type E S P E E P P                     Slew Pullup Signal
-----------------------------------------------------------------------------------
  84   P  3  1   2  1 COM                   ----------------  Fast     Up RA_0_
   5   C  1  1   1  1 COM                   ----------------  Fast     Up RA_10_
  91   A  1  1   1  1 COM                   ----------------  Fast     Up RA_11_
  86   P  3  1   2  1 COM                   ----------------  Fast     Up RA_1_
  78   O  3  1   2  1 COM                   ----------------  Fast     Up RA_2_
  87   P  3  1   2  1 COM                   ----------------  Fast     Up RA_3_
  80   O  3  1   2  1 COM                   ----------------  Fast     Up RA_4_
  71   N  3  1   2  1 COM                   ----------------  Fast     Up RA_5_
  81   O  3  1   2  1 COM                   ----------------  Fast     Up RA_6_
  85   P  3  1   2  1 COM                   ----------------  Fast     Up RA_7_
  79   O  3  1   2  1 COM                   ----------------  Fast     Up RA_8_
  70   N  3  1   2  1 COM                   ----------------  Fast     Up RA_9_
  54   K  2  -   1  1 COM                   ----------------  Fast     Up nADoutLE0
  65   M  1  -   1  1 COM                   ----------------  Fast     Up nADoutLE1
  58   L  4  1   3  1 DFF      R            ----------------  Fast     Up nAS_IOB
  99   B  0  -   0  1 COM                   ----------------  Fast     Up nAoutOE
   4   C 17  1   9  2 COM                   ----------------  Fast     Up nBERR_FSB
  69   N  2  1   1  1 DFF      R            ----------------  Fast     Up nCAS
  60   L  7  1   2  1 DFF      R *       1  --C-------------  Fast     Up nDTACK_FSB
  49   J  3  1   1  1 DFF      R            ----------------  Fast     Up nDinLE
  55   K  6  1   3  1 COM                   ----------------  Fast     Up nDinOE
  48   J  4  1   3  1 DFF      R            ----------------  Fast     Up nDoutOE
  56   K  6  1   4  1 DFF      R            ----------------  Fast     Up nLDS_IOB
  17   E  9  1   6  2 COM                   ----------------  Fast     Up nOE
  37   H  4  1   1  1 COM                   ----------------  Fast     Up nRAMLWE
  36   H  4  1   1  1 COM                   ----------------  Fast     Up nRAMUWE
  61   L  7  1   3  1 COM                   ----------------  Fast     Up nRAS
  41   I  5  1   2  1 COM                   ----------------  Fast     Up nROMCS
  64   M  9  1   4  1 COM                   ----------------  Fast     Up nROMWE
  47   J  6  1   4  1 DFF      R            ----------------  Fast     Up nUDS_IOB
  19   F  8  1   1  1 DFF      R *       1  -----F----------  Fast     Up nVMA_IOB
  42   I  7  1   2  1 DFF      R *       1  --C-------------  Fast     Up nVPA_FSB
-----------------------------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        FP = Fast path used
       OBP = ORP bypass used



Bidir_Signal_List
~~~~~~~~~~~~~~~~~
          I         C      P R P       O Bidir
          N         L Mc   R E U C O F B Fanout
 Pin GLB  P LL PTs  S Type E S P E E P P                     Slew Pullup Signal
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        FP = Fast path used
       OBP = ORP bypass used



Buried_Signal_List
~~~~~~~~~~~~~~~~~~
        I         C      P R P       Node
        N         L Mc   R E U C I F Fanout
Mc GLB  P LL PTs  S Type E S P E R P                     Signal
------------------------------------------------------------------------------
 9   A  6  -   2  1 DFF    * R *     11 A-CDE--HIJKLMN--  cs__nOverlay_94
 9   N  2  -   1  1 DFF      R       9  AB-D--G-IJKLM---  fsb__ASrf_44
 9   G  1  1   1  1 DFF      R       2  ----E-G---------  fsb__RefCnt_132__i0
 5   E  2  1   2  1 DFF      R       2  ----E-G---------  fsb__RefCnt_132__i1
 1   G  3  1   3  1 DFF      R       1  ------G---------  fsb__RefCnt_132__i2
 0   G  4  1   4  1 DFF      R       1  ------G---------  fsb__RefCnt_132__i3
 2   G  5  1   2  1 DFF      R       1  ------G---------  fsb__RefCnt_132__i4
 7   G  5  1   1  1 TFF      R       1  ------G---------  fsb__RefCnt_132__i5
 6   G  6  1   1  1 TFF      R       1  ------G---------  fsb__RefCnt_132__i6
 5   G  7  1   1  1 TFF      R       6  A--D--G-IJK-----  fsb__RefCnt_132__i7
12   G  9  1   1  1 DFF      R *     5  A--D----IJK-----  fsb__RefDone_48
 3   G  9  -   2  1 COM              1  ------G---------  fsb__RefDone_48_0
 3   D  3  1   1  1 DFF      R *     1  ------------M---  fsb__TimeoutA_50
 4   G  7  -   2  1 COM              1  ---D------------  fsb__TimeoutA_50_0
 7   A  2  1   2  1 DFF      R *     1  --C-------------  fsb__TimeoutB_51
 9   B  4  1   3  1 DFF      R *     1  ----------K-----  iobm__ALE0_142
 3   F  7  1   4  1 DFF      R       1  -----F----------  iobm__ES_i0
 4   F  4  1   3  1 DFF      R       1  -----F----------  iobm__ES_i1
 1   F  7  1   5  1 DFF      R       1  -----F----------  iobm__ES_i2
 0   F  6  1   5  1 DFF      R       1  -----F----------  iobm__ES_i3
 2   F  7  1   4  1 TFF      R       1  -----F----------  iobm__ES_i4
 9   F  6  1   1  1 DFF      R       1  -B--------------  iobm__ETACK_138
 7   F  1  1   1  1 DFF      R       1  -----F----------  iobm__Er2_136
12   H  1  -   1  1 DFF      R       1  -----F----------  iobm__Er_135
 5   B  8  1   6  2 DFF      R *     1  -----F----------  iobm__IOACT_141
 9   J  2  1   1  1 DFF      R       1  -B--------------  iobm__IOREQr_134
 3   B  8  1   6  2 DFF      R *     4  -B-------JKL----  iobm__IOS_i0
 7   B  7  1   5  1 DFF      R *     4  -B-------JKL----  iobm__IOS_i1
 3   K  3  1   4  1 DFF      R *     4  -B-------JKL----  iobm__IOS_i2
 0   P  2  1   2  1 DFF      R *     1  ----------K-----  iobs__ALE0_100
 1   N 16  1  11  3 DFF      R *     8  A-C-E--H----MNOP  iobs__ALE1_92
 1   H 15  -  11  3 COM              1  -------------N--  iobs__ALE1_92_0
12   F  1  1   1  1 DFF      R       3  -BC----H--------  iobs__IOACTr_91
 5   P  5  1   2  1 DFF      R *     1  ----------K-----  iobs__IOL0_101
 7   E  2  -   1  1 DFF      R *     1  ---------------P  iobs__IOL1_95
10   D  3  1   2  1 DFF      R *     1  ------------M---  iobs__IORDReady_104
12   B  5  -   2  1 COM              1  ---D------------  iobs__IORDReady_104_0
 5   H 16  1   9  2 DFF      R *     1  ---------J------  iobs__IOREQ_98
 5   O  4  1   2  1 DFF      R *     2  ---------JK-----  iobs__IORW0_99
 6   C 15  -   6  2 COM              1  --------------O-  iobs__IORW0_99_0
12   A  2  -   2  1 DFF      R *     1  --------------O-  iobs__IORW1_93
 5   N 15  -   8  2 COM              1  A---------------  iobs__IORW1_93_0
 9   P  5  1   2  1 DFF      R *     1  ---------J------  iobs__IOU0_102
11   E  2  -   1  1 DFF      R *     1  ---------------P  iobs__IOU1_96
 1   E 15  1  10  2 DFF      R       1  ----E-----------  iobs__Load1_94
 9   K  3  1   2  1 DFF      R *     5  -BC-E--H-----N--  iobs__Once_103
 5   A 15  -  11  3 COM              1  ----------K-----  iobs__Once_103_0
 7   H 16  1   8  2 DFF      R *     6  A-C-E--H-----N-P  iobs__PS_i0
 3   C 16  1   8  2 DFF      R       7  ABC-E--H-----N-P  iobs__PS_i1
 5   M 24  -  25  5 COM              2  --------I--L----  nDTACK_FSB_0
 5   F  7  -   2  1 COM              1  -----F----------  nVMA_IOB_0
 5   L 10  1   3  1 DFF      R *     5  A--D----I-KL----  ram__Once_142
 3   I 10  -   3  1 COM              1  -----------L----  ram__Once_142_0
 1   D 13  1  13  3 DFF      R       2  -------H---L----  ram__RAMEN_146
 1   I 13  1  14  3 DFF      R       1  ------------M---  ram__RAMReady_144
 6   D 13  1   8  2 DFF      R       3  -------------NOP  ram__RASEL_145
 1   K 13  1   7  2 DFF      R       6  A--D----IJKL----  ram__RS_i0
 1   J 12  1   6  2 DFF      R       6  A--D----IJKL----  ram__RS_i1
 1   L 10  1   5  1 TFF      R       6  A--D----IJKL----  ram__RS_i2
 1   A 13  1  13  3 DFF      R       7  A--D--G-IJKL----  ram__RS_i3
 5   J  4  1   2  1 DFF      R       1  -----------L----  ram__RefRAS_147
------------------------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        IR = Input register
        FP = Fast path used
       OBP = ORP bypass used



PostFit_Equations
~~~~~~~~~~~~~~~~~
RA_0_ = A_FSB_10_ & !ram__RASEL_145.Q
    # A_FSB_1_ & ram__RASEL_145.Q ; (2 pterms, 3 signals)

RA_10_ = A_FSB_21_ ; (1 pterm, 1 signal)

RA_11_ = A_FSB_19_ ; (1 pterm, 1 signal)

RA_1_ = A_FSB_11_ & !ram__RASEL_145.Q
    # A_FSB_2_ & ram__RASEL_145.Q ; (2 pterms, 3 signals)

RA_2_ = A_FSB_12_ & !ram__RASEL_145.Q
    # A_FSB_3_ & ram__RASEL_145.Q ; (2 pterms, 3 signals)

RA_3_ = A_FSB_13_ & !ram__RASEL_145.Q
    # A_FSB_4_ & ram__RASEL_145.Q ; (2 pterms, 3 signals)

RA_4_ = A_FSB_14_ & !ram__RASEL_145.Q
    # A_FSB_5_ & ram__RASEL_145.Q ; (2 pterms, 3 signals)

RA_5_ = A_FSB_15_ & !ram__RASEL_145.Q
    # A_FSB_6_ & ram__RASEL_145.Q ; (2 pterms, 3 signals)

RA_6_ = A_FSB_16_ & !ram__RASEL_145.Q
    # A_FSB_7_ & ram__RASEL_145.Q ; (2 pterms, 3 signals)

RA_7_ = A_FSB_17_ & !ram__RASEL_145.Q
    # A_FSB_8_ & ram__RASEL_145.Q ; (2 pterms, 3 signals)

RA_8_ = A_FSB_18_ & !ram__RASEL_145.Q
    # A_FSB_9_ & ram__RASEL_145.Q ; (2 pterms, 3 signals)

RA_9_ = A_FSB_19_ & !ram__RASEL_145.Q
    # A_FSB_20_ & ram__RASEL_145.Q ; (2 pterms, 3 signals)

cs__nOverlay_94.D = 1 ; (1 pterm, 0 signal)
cs__nOverlay_94.C = CLK_FSB ; (1 pterm, 1 signal)
cs__nOverlay_94.CE = !A_FSB_23_ & !nAS_FSB & A_FSB_22_ & !A_FSB_21_
       & !A_FSB_20_ ; (1 pterm, 5 signals)
cs__nOverlay_94.AR = !nRES ; (1 pterm, 1 signal)

fsb__ASrf_44.D = !nAS_FSB ; (1 pterm, 1 signal)
fsb__ASrf_44.C = !CLK_FSB ; (1 pterm, 1 signal)

fsb__RefCnt_132__i0.D = !fsb__RefCnt_132__i0.Q ; (1 pterm, 1 signal)
fsb__RefCnt_132__i0.C = CLK_FSB ; (1 pterm, 1 signal)

fsb__RefCnt_132__i1.D = fsb__RefCnt_132__i1.Q & !fsb__RefCnt_132__i0.Q
    # !fsb__RefCnt_132__i1.Q & fsb__RefCnt_132__i0.Q ; (2 pterms, 2 signals)
fsb__RefCnt_132__i1.C = CLK_FSB ; (1 pterm, 1 signal)

fsb__RefCnt_132__i2.D = !fsb__RefCnt_132__i2.Q & fsb__RefCnt_132__i1.Q
       & fsb__RefCnt_132__i0.Q
    # fsb__RefCnt_132__i2.Q & !fsb__RefCnt_132__i1.Q
    # fsb__RefCnt_132__i2.Q & !fsb__RefCnt_132__i0.Q ; (3 pterms, 3 signals)
fsb__RefCnt_132__i2.C = CLK_FSB ; (1 pterm, 1 signal)

fsb__RefCnt_132__i3.D = !fsb__RefCnt_132__i3.Q & fsb__RefCnt_132__i2.Q
       & fsb__RefCnt_132__i1.Q & fsb__RefCnt_132__i0.Q
    # fsb__RefCnt_132__i3.Q & !fsb__RefCnt_132__i1.Q
    # fsb__RefCnt_132__i3.Q & !fsb__RefCnt_132__i2.Q
    # fsb__RefCnt_132__i3.Q & !fsb__RefCnt_132__i0.Q ; (4 pterms, 4 signals)
fsb__RefCnt_132__i3.C = CLK_FSB ; (1 pterm, 1 signal)

fsb__RefCnt_132__i4.D.X1 = fsb__RefCnt_132__i4.Q ; (1 pterm, 1 signal)
fsb__RefCnt_132__i4.D.X2 = fsb__RefCnt_132__i3.Q & fsb__RefCnt_132__i2.Q
       & fsb__RefCnt_132__i1.Q & fsb__RefCnt_132__i0.Q ; (1 pterm, 4 signals)
fsb__RefCnt_132__i4.C = CLK_FSB ; (1 pterm, 1 signal)

fsb__RefCnt_132__i5.T = fsb__RefCnt_132__i4.Q & fsb__RefCnt_132__i3.Q
       & fsb__RefCnt_132__i2.Q & fsb__RefCnt_132__i1.Q & fsb__RefCnt_132__i0.Q ; (1 pterm, 5 signals)
fsb__RefCnt_132__i5.C = CLK_FSB ; (1 pterm, 1 signal)

fsb__RefCnt_132__i6.T = fsb__RefCnt_132__i5.Q & fsb__RefCnt_132__i4.Q
       & fsb__RefCnt_132__i3.Q & fsb__RefCnt_132__i2.Q & fsb__RefCnt_132__i1.Q
       & fsb__RefCnt_132__i0.Q ; (1 pterm, 6 signals)
fsb__RefCnt_132__i6.C = CLK_FSB ; (1 pterm, 1 signal)

fsb__RefCnt_132__i7.T = fsb__RefCnt_132__i6.Q & fsb__RefCnt_132__i5.Q
       & fsb__RefCnt_132__i4.Q & fsb__RefCnt_132__i3.Q & fsb__RefCnt_132__i2.Q
       & fsb__RefCnt_132__i1.Q & fsb__RefCnt_132__i0.Q ; (1 pterm, 7 signals)
fsb__RefCnt_132__i7.C = CLK_FSB ; (1 pterm, 1 signal)

fsb__RefDone_48.D = !( !fsb__RefCnt_132__i7.Q & !fsb__RefCnt_132__i6.Q
       & !fsb__RefCnt_132__i5.Q & !fsb__RefCnt_132__i4.Q
       & !fsb__RefCnt_132__i3.Q & !fsb__RefCnt_132__i2.Q
       & !fsb__RefCnt_132__i1.Q & !fsb__RefCnt_132__i0.Q ) ; (1 pterm, 8 signals)
fsb__RefDone_48.C = CLK_FSB ; (1 pterm, 1 signal)
fsb__RefDone_48.CE = fsb__RefDone_48_0 ; (1 pterm, 1 signal)

fsb__RefDone_48_0 = ram__RS_i3.Q
    # !fsb__RefCnt_132__i7.Q & !fsb__RefCnt_132__i6.Q & !fsb__RefCnt_132__i5.Q
       & !fsb__RefCnt_132__i4.Q & !fsb__RefCnt_132__i3.Q
       & !fsb__RefCnt_132__i2.Q & !fsb__RefCnt_132__i1.Q
       & !fsb__RefCnt_132__i0.Q ; (2 pterms, 9 signals)

fsb__TimeoutA_50.D = !( nAS_FSB & !fsb__ASrf_44.Q ) ; (1 pterm, 2 signals)
fsb__TimeoutA_50.C = CLK_FSB ; (1 pterm, 1 signal)
fsb__TimeoutA_50.CE = fsb__TimeoutA_50_0 ; (1 pterm, 1 signal)

fsb__TimeoutA_50_0 = nAS_FSB & !fsb__ASrf_44.Q
    # !nAS_FSB & !fsb__RefCnt_132__i4.Q & !fsb__RefCnt_132__i3.Q
       & !fsb__RefCnt_132__i2.Q & !fsb__RefCnt_132__i1.Q
       & !fsb__RefCnt_132__i0.Q ; (2 pterms, 7 signals)

fsb__TimeoutB_51.D = !( nAS_FSB & !fsb__ASrf_44.Q ) ; (1 pterm, 2 signals)
fsb__TimeoutB_51.C = CLK_FSB ; (1 pterm, 1 signal)
fsb__TimeoutB_51.CE = nAS_FSB & !fsb__ASrf_44.Q ; (1 pterm, 2 signals)

iobm__ALE0_142.D = !( !iobm__IOREQr_134.Q & !iobm__IOS_i2.Q & !iobm__IOS_i1.Q
       & !iobm__IOS_i0.Q
    # iobm__IOS_i2.Q & iobm__IOS_i1.Q ) ; (2 pterms, 4 signals)
iobm__ALE0_142.C = CLK2X_IOB ; (1 pterm, 1 signal)
iobm__ALE0_142.CE = 1 ; (1 pterm, 0 signal)

iobm__ES_i0.D = !( !iobm__ES_i4.Q & !iobm__ES_i3.Q & !iobm__ES_i2.Q
       & !iobm__ES_i1.Q & iobm__Er_135.Q
    # !iobm__ES_i4.Q & !iobm__ES_i3.Q & !iobm__ES_i2.Q & !iobm__ES_i1.Q
       & !iobm__Er2_136.Q
    # iobm__ES_i0.Q & iobm__Er_135.Q
    # iobm__ES_i0.Q & !iobm__Er2_136.Q ) ; (4 pterms, 7 signals)
iobm__ES_i0.C = CLK2X_IOB ; (1 pterm, 1 signal)

iobm__ES_i1.D = !( !iobm__ES_i1.Q & !iobm__ES_i0.Q
    # iobm__ES_i1.Q & iobm__ES_i0.Q
    # !iobm__Er_135.Q & iobm__Er2_136.Q ) ; (3 pterms, 4 signals)
iobm__ES_i1.C = CLK2X_IOB ; (1 pterm, 1 signal)

iobm__ES_i2.D = !( iobm__ES_i4.Q & !iobm__ES_i3.Q & !iobm__ES_i2.Q
    # iobm__ES_i2.Q & iobm__ES_i1.Q & iobm__ES_i0.Q
    # !iobm__ES_i2.Q & !iobm__ES_i0.Q
    # !iobm__ES_i2.Q & !iobm__ES_i1.Q
    # !iobm__Er_135.Q & iobm__Er2_136.Q ) ; (5 pterms, 7 signals)
iobm__ES_i2.C = CLK2X_IOB ; (1 pterm, 1 signal)

iobm__ES_i3.D = !( iobm__ES_i3.Q & iobm__ES_i2.Q & iobm__ES_i1.Q
       & iobm__ES_i0.Q
    # !iobm__ES_i3.Q & !iobm__ES_i0.Q
    # !iobm__ES_i3.Q & !iobm__ES_i1.Q
    # !iobm__ES_i3.Q & !iobm__ES_i2.Q
    # !iobm__Er_135.Q & iobm__Er2_136.Q ) ; (5 pterms, 6 signals)
iobm__ES_i3.C = CLK2X_IOB ; (1 pterm, 1 signal)

iobm__ES_i4.T = iobm__ES_i3.Q & iobm__ES_i2.Q & iobm__ES_i1.Q & iobm__ES_i0.Q
       & iobm__Er_135.Q
    # iobm__ES_i4.Q & !iobm__ES_i3.Q & !iobm__ES_i2.Q & iobm__ES_i1.Q
       & iobm__ES_i0.Q
    # iobm__ES_i3.Q & iobm__ES_i2.Q & iobm__ES_i1.Q & iobm__ES_i0.Q
       & !iobm__Er2_136.Q
    # iobm__ES_i4.Q & !iobm__Er_135.Q & iobm__Er2_136.Q ; (4 pterms, 7 signals)
iobm__ES_i4.C = CLK2X_IOB ; (1 pterm, 1 signal)

iobm__ETACK_138.D = !nVMA_IOB.Q & iobm__ES_i4.Q & !iobm__ES_i3.Q
       & !iobm__ES_i2.Q & !iobm__ES_i1.Q & !iobm__ES_i0.Q ; (1 pterm, 6 signals)
iobm__ETACK_138.C = CLK2X_IOB ; (1 pterm, 1 signal)

iobm__Er2_136.D = iobm__Er_135.Q ; (1 pterm, 1 signal)
iobm__Er2_136.C = CLK2X_IOB ; (1 pterm, 1 signal)

iobm__Er_135.D = E_IOB ; (1 pterm, 1 signal)
iobm__Er_135.C = !CLK_IOB ; (1 pterm, 1 signal)

iobm__IOACT_141.D = !( !iobm__IOREQr_134.Q & !iobm__IOS_i2.Q & !iobm__IOS_i1.Q
       & !iobm__IOS_i0.Q
    # CLK_IOB & iobm__ETACK_138.Q & iobm__IOS_i2.Q & iobm__IOS_i0.Q
    # CLK_IOB & !nBERR_IOB & iobm__IOS_i2.Q & iobm__IOS_i0.Q
    # CLK_IOB & !nDTACK_IOB & iobm__IOS_i2.Q & iobm__IOS_i0.Q
    # iobm__IOS_i2.Q & iobm__IOS_i1.Q ) ; (5 pterms, 8 signals)
iobm__IOACT_141.C = CLK2X_IOB ; (1 pterm, 1 signal)
iobm__IOACT_141.CE = 1 ; (1 pterm, 0 signal)

iobm__IOREQr_134.D = iobs__IOREQ_98.Q ; (1 pterm, 1 signal)
iobm__IOREQr_134.C = !CLK2X_IOB ; (1 pterm, 1 signal)

iobm__IOS_i0.D = nDTACK_IOB & nBERR_IOB & !iobm__ETACK_138.Q & iobm__IOS_i2.Q
       & !iobm__IOS_i1.Q
    # !CLK_IOB & iobm__IOS_i2.Q & !iobm__IOS_i1.Q
    # !CLK_IOB & iobm__IOREQr_134.Q & !iobm__IOS_i0.Q
    # iobm__IOS_i1.Q & !iobm__IOS_i0.Q
    # iobm__IOS_i2.Q & !iobm__IOS_i0.Q ; (5 pterms, 8 signals)
iobm__IOS_i0.C = CLK2X_IOB ; (1 pterm, 1 signal)
iobm__IOS_i0.CE = 1 ; (1 pterm, 0 signal)

iobm__IOS_i1.D = !( nDTACK_IOB & nBERR_IOB & !iobm__ETACK_138.Q
       & iobm__IOS_i2.Q & iobm__IOS_i0.Q
    # !CLK_IOB & iobm__IOS_i2.Q & iobm__IOS_i0.Q
    # !iobm__IOS_i1.Q & !iobm__IOS_i0.Q
    # iobm__IOS_i1.Q & iobm__IOS_i0.Q ) ; (4 pterms, 7 signals)
iobm__IOS_i1.C = CLK2X_IOB ; (1 pterm, 1 signal)
iobm__IOS_i1.CE = 1 ; (1 pterm, 0 signal)

iobm__IOS_i2.D = !iobm__IOS_i2.Q & iobm__IOS_i1.Q & iobm__IOS_i0.Q
    # iobm__IOS_i2.Q & !iobm__IOS_i1.Q
    # iobm__IOS_i2.Q & !iobm__IOS_i0.Q ; (3 pterms, 3 signals)
iobm__IOS_i2.C = CLK2X_IOB ; (1 pterm, 1 signal)
iobm__IOS_i2.CE = 1 ; (1 pterm, 0 signal)

iobs__ALE0_100.D = iobs__PS_i1.Q & iobs__PS_i0.Q ; (1 pterm, 2 signals)
iobs__ALE0_100.C = CLK_FSB ; (1 pterm, 1 signal)
iobs__ALE0_100.CE = 1 ; (1 pterm, 0 signal)

iobs__ALE1_92.D = A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & !A_FSB_22_
       & A_FSB_21_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_ & !iobs__ALE1_92.Q
       & cs__nOverlay_94.Q & iobs__PS_i0.Q & !iobs__Once_103.Q
    # A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & !A_FSB_22_ & A_FSB_21_
       & A_FSB_20_ & A_FSB_19_ & A_FSB_18_ & !iobs__ALE1_92.Q
       & cs__nOverlay_94.Q & iobs__PS_i1.Q & !iobs__Once_103.Q
    # A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & !iobs__ALE1_92.Q & !cs__nOverlay_94.Q
       & iobs__PS_i0.Q & !iobs__Once_103.Q
    # A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & !iobs__ALE1_92.Q & !cs__nOverlay_94.Q
       & iobs__PS_i1.Q & !iobs__Once_103.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & !iobs__ALE1_92.Q
       & iobs__PS_i0.Q & !iobs__Once_103.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & !iobs__ALE1_92.Q
       & iobs__PS_i1.Q & !iobs__Once_103.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs__ALE1_92.Q
       & iobs__PS_i0.Q & !iobs__Once_103.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_20_ & !iobs__ALE1_92.Q & iobs__PS_i0.Q
       & !iobs__Once_103.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs__ALE1_92.Q
       & iobs__PS_i1.Q & !iobs__Once_103.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_20_ & !iobs__ALE1_92.Q & iobs__PS_i1.Q
       & !iobs__Once_103.Q ; (10 pterms, 15 signals)
iobs__ALE1_92.C = CLK_FSB ; (1 pterm, 1 signal)
iobs__ALE1_92.CE = iobs__ALE1_92_0 ; (1 pterm, 1 signal)

iobs__ALE1_92_0 = iobs__PS_i1.Q & iobs__PS_i0.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_20_ & !iobs__ALE1_92.Q & iobs__PS_i1.Q
       & !iobs__Once_103.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_20_ & !iobs__ALE1_92.Q & iobs__PS_i0.Q
       & !iobs__Once_103.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & !iobs__ALE1_92.Q
       & iobs__PS_i1.Q & !iobs__Once_103.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs__ALE1_92.Q
       & iobs__PS_i1.Q & !iobs__Once_103.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & !iobs__ALE1_92.Q
       & iobs__PS_i0.Q & !iobs__Once_103.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs__ALE1_92.Q
       & iobs__PS_i0.Q & !iobs__Once_103.Q
    # A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & !iobs__ALE1_92.Q & !cs__nOverlay_94.Q
       & iobs__PS_i1.Q & !iobs__Once_103.Q
    # A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & !iobs__ALE1_92.Q & !cs__nOverlay_94.Q
       & iobs__PS_i0.Q & !iobs__Once_103.Q
    # A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & !A_FSB_22_ & A_FSB_21_
       & A_FSB_20_ & A_FSB_19_ & A_FSB_18_ & !iobs__ALE1_92.Q
       & cs__nOverlay_94.Q & iobs__PS_i1.Q & !iobs__Once_103.Q
    # A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & !A_FSB_22_ & A_FSB_21_
       & A_FSB_20_ & A_FSB_19_ & A_FSB_18_ & !iobs__ALE1_92.Q
       & cs__nOverlay_94.Q & iobs__PS_i0.Q & !iobs__Once_103.Q ; (11 pterms, 15 signals)

iobs__IOACTr_91.D = iobm__IOACT_141.Q ; (1 pterm, 1 signal)
iobs__IOACTr_91.C = CLK_FSB ; (1 pterm, 1 signal)

iobs__IOL0_101.D = !nLDS_FSB & !iobs__ALE1_92.Q
    # iobs__ALE1_92.Q & iobs__IOL1_95.Q ; (2 pterms, 3 signals)
iobs__IOL0_101.C = CLK_FSB ; (1 pterm, 1 signal)
iobs__IOL0_101.CE = iobs__PS_i1.Q & iobs__PS_i0.Q ; (1 pterm, 2 signals)

iobs__IOL1_95.D = !nLDS_FSB ; (1 pterm, 1 signal)
iobs__IOL1_95.C = CLK_FSB ; (1 pterm, 1 signal)
iobs__IOL1_95.CE = iobs__Load1_94.Q ; (1 pterm, 1 signal)

iobs__IORDReady_104.D = !( nAS_FSB & !fsb__ASrf_44.Q ) ; (1 pterm, 2 signals)
iobs__IORDReady_104.C = CLK_FSB ; (1 pterm, 1 signal)
iobs__IORDReady_104.CE = iobs__IORDReady_104_0 ; (1 pterm, 1 signal)

iobs__IORDReady_104_0 = nAS_FSB & !fsb__ASrf_44.Q
    # !nAS_FSB & !iobs__IOACTr_91.Q & !iobs__PS_i1.Q & iobs__Once_103.Q ; (2 pterms, 5 signals)

iobs__IOREQ_98.D = A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & !A_FSB_22_
       & A_FSB_21_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_ & cs__nOverlay_94.Q
       & !iobs__PS_i1.Q & !iobs__PS_i0.Q & !iobs__Once_103.Q
    # A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & !cs__nOverlay_94.Q & !iobs__PS_i1.Q
       & !iobs__PS_i0.Q & !iobs__Once_103.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & !iobs__PS_i1.Q
       & !iobs__PS_i0.Q & !iobs__Once_103.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs__PS_i1.Q
       & !iobs__PS_i0.Q & !iobs__Once_103.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_20_ & !iobs__PS_i1.Q & !iobs__PS_i0.Q
       & !iobs__Once_103.Q
    # iobs__ALE1_92.Q & !iobs__PS_i1.Q & !iobs__PS_i0.Q
    # iobs__PS_i1.Q & iobs__PS_i0.Q
    # !iobs__IOACTr_91.Q & iobs__PS_i1.Q ; (8 pterms, 16 signals)
iobs__IOREQ_98.C = CLK_FSB ; (1 pterm, 1 signal)
iobs__IOREQ_98.CE = 1 ; (1 pterm, 0 signal)

iobs__IORW0_99.D = nWE_FSB & !iobs__ALE1_92.Q
    # iobs__ALE1_92.Q & iobs__IORW1_93.Q ; (2 pterms, 3 signals)
iobs__IORW0_99.C = CLK_FSB ; (1 pterm, 1 signal)
iobs__IORW0_99.CE = iobs__IORW0_99_0 ; (1 pterm, 1 signal)

iobs__IORW0_99_0 = iobs__ALE1_92.Q & !iobs__PS_i1.Q & !iobs__PS_i0.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_20_ & !iobs__PS_i1.Q & !iobs__PS_i0.Q
       & !iobs__Once_103.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & !iobs__PS_i1.Q
       & !iobs__PS_i0.Q & !iobs__Once_103.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs__PS_i1.Q
       & !iobs__PS_i0.Q & !iobs__Once_103.Q
    # A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & !cs__nOverlay_94.Q & !iobs__PS_i1.Q
       & !iobs__PS_i0.Q & !iobs__Once_103.Q
    # A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & !A_FSB_22_ & A_FSB_21_
       & A_FSB_20_ & A_FSB_19_ & A_FSB_18_ & cs__nOverlay_94.Q
       & !iobs__PS_i1.Q & !iobs__PS_i0.Q & !iobs__Once_103.Q ; (6 pterms, 15 signals)

iobs__IORW1_93.D = nWE_FSB ; (1 pterm, 1 signal)
iobs__IORW1_93.C = CLK_FSB ; (1 pterm, 1 signal)
iobs__IORW1_93.CE = iobs__IORW1_93_0 ; (1 pterm, 1 signal)

iobs__IORW1_93_0.X1 = A_FSB_23_ & !nAS_FSB & A_FSB_20_ & !iobs__ALE1_92.Q
       & !iobs__Once_103.Q
    # !A_FSB_23_ & !nAS_FSB & A_FSB_20_ & !iobs__ALE1_92.Q & !iobs__PS_i1.Q
       & !iobs__PS_i0.Q & !iobs__Once_103.Q
    # !A_FSB_23_ & !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_
       & !iobs__ALE1_92.Q & !iobs__Once_103.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & !A_FSB_20_
       & !iobs__ALE1_92.Q & iobs__PS_i0.Q & !iobs__Once_103.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & !A_FSB_20_
       & !iobs__ALE1_92.Q & iobs__PS_i1.Q & !iobs__Once_103.Q
    # A_FSB_17_ & A_FSB_16_ & !A_FSB_23_ & !nAS_FSB & !nWE_FSB & A_FSB_22_
       & A_FSB_20_ & A_FSB_19_ & A_FSB_18_ & !iobs__ALE1_92.Q
       & !cs__nOverlay_94.Q & !iobs__Once_103.Q
    # A_FSB_17_ & A_FSB_16_ & !A_FSB_23_ & !nAS_FSB & !nWE_FSB & !A_FSB_22_
       & A_FSB_21_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_ & !iobs__ALE1_92.Q
       & cs__nOverlay_94.Q & !iobs__Once_103.Q ; (7 pterms, 15 signals)
iobs__IORW1_93_0.X2 = !nAS_FSB & A_FSB_20_ & !iobs__ALE1_92.Q & !iobs__PS_i1.Q
       & !iobs__PS_i0.Q & !iobs__Once_103.Q ; (1 pterm, 6 signals)

iobs__IOU0_102.D = !nUDS_FSB & !iobs__ALE1_92.Q
    # iobs__ALE1_92.Q & iobs__IOU1_96.Q ; (2 pterms, 3 signals)
iobs__IOU0_102.C = CLK_FSB ; (1 pterm, 1 signal)
iobs__IOU0_102.CE = iobs__PS_i1.Q & iobs__PS_i0.Q ; (1 pterm, 2 signals)

iobs__IOU1_96.D = !nUDS_FSB ; (1 pterm, 1 signal)
iobs__IOU1_96.C = CLK_FSB ; (1 pterm, 1 signal)
iobs__IOU1_96.CE = iobs__Load1_94.Q ; (1 pterm, 1 signal)

iobs__Load1_94.D = A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & !A_FSB_22_
       & A_FSB_21_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_ & !iobs__ALE1_92.Q
       & cs__nOverlay_94.Q & iobs__PS_i0.Q & !iobs__Once_103.Q
    # A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & !A_FSB_22_ & A_FSB_21_
       & A_FSB_20_ & A_FSB_19_ & A_FSB_18_ & !iobs__ALE1_92.Q
       & cs__nOverlay_94.Q & iobs__PS_i1.Q & !iobs__Once_103.Q
    # A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & !iobs__ALE1_92.Q & !cs__nOverlay_94.Q
       & iobs__PS_i0.Q & !iobs__Once_103.Q
    # A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & !iobs__ALE1_92.Q & !cs__nOverlay_94.Q
       & iobs__PS_i1.Q & !iobs__Once_103.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & !iobs__ALE1_92.Q
       & iobs__PS_i0.Q & !iobs__Once_103.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & !iobs__ALE1_92.Q
       & iobs__PS_i1.Q & !iobs__Once_103.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs__ALE1_92.Q
       & iobs__PS_i0.Q & !iobs__Once_103.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_20_ & !iobs__ALE1_92.Q & iobs__PS_i0.Q
       & !iobs__Once_103.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs__ALE1_92.Q
       & iobs__PS_i1.Q & !iobs__Once_103.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_20_ & !iobs__ALE1_92.Q & iobs__PS_i1.Q
       & !iobs__Once_103.Q ; (10 pterms, 15 signals)
iobs__Load1_94.C = CLK_FSB ; (1 pterm, 1 signal)

iobs__Once_103.D = !( nAS_FSB & !fsb__ASrf_44.Q ) ; (1 pterm, 2 signals)
iobs__Once_103.C = CLK_FSB ; (1 pterm, 1 signal)
iobs__Once_103.CE = iobs__Once_103_0 ; (1 pterm, 1 signal)

iobs__Once_103_0 = nAS_FSB & !fsb__ASrf_44.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_20_ & !iobs__ALE1_92.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_20_ & !iobs__PS_i1.Q & !iobs__PS_i0.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & !iobs__ALE1_92.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs__ALE1_92.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & !iobs__PS_i1.Q
       & !iobs__PS_i0.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs__PS_i1.Q
       & !iobs__PS_i0.Q
    # A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & !iobs__ALE1_92.Q & !cs__nOverlay_94.Q
    # A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & !cs__nOverlay_94.Q & !iobs__PS_i1.Q
       & !iobs__PS_i0.Q
    # A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & !A_FSB_22_ & A_FSB_21_
       & A_FSB_20_ & A_FSB_19_ & A_FSB_18_ & !iobs__ALE1_92.Q
       & cs__nOverlay_94.Q
    # A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & !A_FSB_22_ & A_FSB_21_
       & A_FSB_20_ & A_FSB_19_ & A_FSB_18_ & cs__nOverlay_94.Q
       & !iobs__PS_i1.Q & !iobs__PS_i0.Q ; (11 pterms, 15 signals)

iobs__PS_i0.D = A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & !A_FSB_22_
       & A_FSB_21_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_ & cs__nOverlay_94.Q
       & !iobs__PS_i1.Q & !iobs__PS_i0.Q & !iobs__Once_103.Q
    # A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & !cs__nOverlay_94.Q & !iobs__PS_i1.Q
       & !iobs__PS_i0.Q & !iobs__Once_103.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & !iobs__PS_i1.Q
       & !iobs__PS_i0.Q & !iobs__Once_103.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs__PS_i1.Q
       & !iobs__PS_i0.Q & !iobs__Once_103.Q
    # iobs__IOACTr_91.Q & iobs__PS_i1.Q & !iobs__PS_i0.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_20_ & !iobs__PS_i1.Q & !iobs__PS_i0.Q
       & !iobs__Once_103.Q
    # iobs__ALE1_92.Q & !iobs__PS_i1.Q & !iobs__PS_i0.Q ; (7 pterms, 16 signals)
iobs__PS_i0.C = CLK_FSB ; (1 pterm, 1 signal)
iobs__PS_i0.CE = 1 ; (1 pterm, 0 signal)

iobs__PS_i1.D = A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & !A_FSB_22_
       & A_FSB_21_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_ & cs__nOverlay_94.Q
       & !iobs__PS_i1.Q & !iobs__PS_i0.Q & !iobs__Once_103.Q
    # A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & !cs__nOverlay_94.Q & !iobs__PS_i1.Q
       & !iobs__PS_i0.Q & !iobs__Once_103.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs__PS_i1.Q
       & !iobs__PS_i0.Q & !iobs__Once_103.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_20_ & !iobs__PS_i1.Q & !iobs__PS_i0.Q
       & !iobs__Once_103.Q
    # A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & !iobs__PS_i1.Q
       & !iobs__PS_i0.Q & !iobs__Once_103.Q
    # iobs__ALE1_92.Q & !iobs__PS_i1.Q & !iobs__PS_i0.Q
    # iobs__IOACTr_91.Q & iobs__PS_i0.Q
    # !iobs__IOACTr_91.Q & iobs__PS_i1.Q ; (8 pterms, 16 signals)
iobs__PS_i1.C = CLK_FSB ; (1 pterm, 1 signal)

nADoutLE0 = !iobs__ALE0_100.Q & !iobm__ALE0_142.Q ; (1 pterm, 2 signals)

nADoutLE1 = !iobs__ALE1_92.Q ; (1 pterm, 1 signal)

nAS_IOB.D = !iobm__IOS_i2.Q & !iobm__IOS_i1.Q & !iobm__IOS_i0.Q
    # iobm__IOS_i2.Q & iobm__IOS_i1.Q ; (2 pterms, 3 signals)
nAS_IOB.C = !CLK2X_IOB ; (1 pterm, 1 signal)

nAoutOE = 0 ; (0 pterm, 0 signal)

nBERR_FSB = !( A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & nDTACK_IOB
       & nVPA_IOB & !nBERR_IOB & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & nDTACK_FSB.Q & nVPA_FSB.Q & cs__nOverlay_94.Q
    # A_FSB_17_ & A_FSB_16_ & !nAS_FSB & !nWE_FSB & nDTACK_IOB & nVPA_IOB
       & !nBERR_IOB & A_FSB_22_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & nDTACK_FSB.Q & nVPA_FSB.Q & !cs__nOverlay_94.Q
    # A_FSB_23_ & !nAS_FSB & nDTACK_IOB & nVPA_IOB & !nBERR_IOB & A_FSB_22_
       & A_FSB_21_ & nDTACK_FSB.Q & nVPA_FSB.Q
    # !nAS_FSB & nDTACK_IOB & nVPA_IOB & !nBERR_IOB & A_FSB_22_ & !A_FSB_21_
       & A_FSB_20_ & nDTACK_FSB.Q & nVPA_FSB.Q
    # !nAS_FSB & nDTACK_IOB & nVPA_IOB & !A_FSB_21_ & !A_FSB_20_
       & nDTACK_FSB.Q & nVPA_FSB.Q & fsb__TimeoutB_51.Q
    # !nAS_FSB & nDTACK_IOB & nVPA_IOB & !A_FSB_22_ & !A_FSB_20_
       & nDTACK_FSB.Q & nVPA_FSB.Q & fsb__TimeoutB_51.Q
    # !A_FSB_23_ & !nAS_FSB & nDTACK_IOB & nVPA_IOB & A_FSB_21_ & nDTACK_FSB.Q
       & nVPA_FSB.Q & fsb__TimeoutB_51.Q
    # !A_FSB_23_ & !nAS_FSB & nDTACK_IOB & nVPA_IOB & !A_FSB_22_
       & nDTACK_FSB.Q & nVPA_FSB.Q & fsb__TimeoutB_51.Q
    # A_FSB_23_ & !nAS_FSB & nDTACK_IOB & nVPA_IOB & !nBERR_IOB & A_FSB_20_
       & nDTACK_FSB.Q & nVPA_FSB.Q ) ; (9 pterms, 17 signals)

nCAS.D = !ram__RASEL_145.Q ; (1 pterm, 1 signal)
nCAS.C = !CLK_FSB ; (1 pterm, 1 signal)

nDTACK_FSB.D = A_FSB_23_ & A_FSB_22_ & A_FSB_21_ & A_FSB_20_
    # nAS_FSB & !fsb__ASrf_44.Q ; (2 pterms, 6 signals)
nDTACK_FSB.C = CLK_FSB ; (1 pterm, 1 signal)
nDTACK_FSB.CE = nDTACK_FSB_0 ; (1 pterm, 1 signal)

nDTACK_FSB_0 = !nAS_FSB & !nWE_FSB & !iobs__ALE1_92.Q & fsb__TimeoutA_50.Q
       & ram__RAMReady_144.Q
    # !nAS_FSB & nWE_FSB & A_FSB_22_ & !A_FSB_21_ & fsb__TimeoutA_50.Q
       & iobs__IORDReady_104.Q
    # !nAS_FSB & !nWE_FSB & A_FSB_22_ & !A_FSB_21_ & !iobs__ALE1_92.Q
       & fsb__TimeoutA_50.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & !A_FSB_20_ & fsb__TimeoutA_50.Q
    # A_FSB_17_ & A_FSB_16_ & !A_FSB_23_ & A_FSB_15_ & !nAS_FSB & !A_FSB_14_
       & A_FSB_13_ & !A_FSB_12_ & !nWE_FSB & !A_FSB_11_ & !A_FSB_10_
       & A_FSB_8_ & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & !iobs__ALE1_92.Q & cs__nOverlay_94.Q & ram__RAMReady_144.Q
    # A_FSB_17_ & A_FSB_16_ & !A_FSB_23_ & A_FSB_15_ & !nAS_FSB & A_FSB_14_
       & A_FSB_13_ & A_FSB_12_ & !nWE_FSB & A_FSB_11_ & A_FSB_10_ & A_FSB_8_
       & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & !iobs__ALE1_92.Q & cs__nOverlay_94.Q & ram__RAMReady_144.Q
    # A_FSB_17_ & A_FSB_16_ & !A_FSB_23_ & A_FSB_15_ & !nAS_FSB & !A_FSB_14_
       & A_FSB_13_ & !A_FSB_12_ & !nWE_FSB & !A_FSB_11_ & !A_FSB_10_
       & A_FSB_9_ & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & !iobs__ALE1_92.Q & cs__nOverlay_94.Q & ram__RAMReady_144.Q
    # A_FSB_17_ & A_FSB_16_ & !A_FSB_23_ & A_FSB_15_ & !nAS_FSB & A_FSB_14_
       & A_FSB_13_ & A_FSB_12_ & !nWE_FSB & A_FSB_11_ & A_FSB_10_ & A_FSB_9_
       & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & !iobs__ALE1_92.Q & cs__nOverlay_94.Q & ram__RAMReady_144.Q
    # A_FSB_17_ & A_FSB_16_ & !A_FSB_23_ & A_FSB_15_ & !nAS_FSB & !A_FSB_14_
       & A_FSB_13_ & !A_FSB_12_ & !nWE_FSB & !A_FSB_11_ & !A_FSB_10_
       & A_FSB_8_ & A_FSB_22_ & A_FSB_21_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & !iobs__ALE1_92.Q & !cs__nOverlay_94.Q & ram__RAMReady_144.Q
    # A_FSB_17_ & A_FSB_16_ & !A_FSB_23_ & A_FSB_15_ & !nAS_FSB & A_FSB_14_
       & A_FSB_13_ & A_FSB_12_ & !nWE_FSB & A_FSB_11_ & A_FSB_10_ & A_FSB_8_
       & A_FSB_22_ & A_FSB_21_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & !iobs__ALE1_92.Q & !cs__nOverlay_94.Q & ram__RAMReady_144.Q
    # A_FSB_17_ & A_FSB_16_ & !A_FSB_23_ & A_FSB_15_ & !nAS_FSB & !A_FSB_14_
       & A_FSB_13_ & !A_FSB_12_ & !nWE_FSB & !A_FSB_11_ & !A_FSB_10_
       & A_FSB_9_ & A_FSB_22_ & A_FSB_21_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & !iobs__ALE1_92.Q & !cs__nOverlay_94.Q & ram__RAMReady_144.Q
    # A_FSB_17_ & A_FSB_16_ & !A_FSB_23_ & A_FSB_15_ & !nAS_FSB & A_FSB_14_
       & A_FSB_13_ & A_FSB_12_ & !nWE_FSB & A_FSB_11_ & A_FSB_10_ & A_FSB_9_
       & A_FSB_22_ & A_FSB_21_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & !iobs__ALE1_92.Q & !cs__nOverlay_94.Q & ram__RAMReady_144.Q
    # A_FSB_23_ & !nAS_FSB & !A_FSB_22_ & !A_FSB_20_ & fsb__TimeoutA_50.Q
    # !A_FSB_23_ & !nAS_FSB & !A_FSB_22_ & !A_FSB_21_ & fsb__TimeoutA_50.Q
       & ram__RAMReady_144.Q
    # !A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & fsb__TimeoutA_50.Q
       & cs__nOverlay_94.Q
    # !A_FSB_16_ & !A_FSB_23_ & !nAS_FSB & A_FSB_21_ & fsb__TimeoutA_50.Q
       & ram__RAMReady_144.Q
    # !A_FSB_17_ & !A_FSB_23_ & !nAS_FSB & A_FSB_21_ & fsb__TimeoutA_50.Q
       & ram__RAMReady_144.Q
    # !A_FSB_23_ & !nAS_FSB & A_FSB_21_ & !A_FSB_18_ & fsb__TimeoutA_50.Q
       & ram__RAMReady_144.Q
    # !A_FSB_23_ & !nAS_FSB & A_FSB_21_ & !A_FSB_19_ & fsb__TimeoutA_50.Q
       & ram__RAMReady_144.Q
    # A_FSB_23_ & !nAS_FSB & !nWE_FSB & !iobs__ALE1_92.Q & fsb__TimeoutA_50.Q
    # !A_FSB_23_ & !nAS_FSB & nWE_FSB & A_FSB_21_ & fsb__TimeoutA_50.Q
       & ram__RAMReady_144.Q
    # !A_FSB_23_ & !nAS_FSB & !A_FSB_22_ & fsb__TimeoutA_50.Q
       & !cs__nOverlay_94.Q
    # A_FSB_23_ & !nAS_FSB & nWE_FSB & fsb__TimeoutA_50.Q
       & iobs__IORDReady_104.Q
    # !A_FSB_23_ & !nAS_FSB & !A_FSB_20_ & fsb__TimeoutA_50.Q
       & ram__RAMReady_144.Q
    # nAS_FSB & !fsb__ASrf_44.Q ; (25 pterms, 24 signals)

nDinLE.D = iobm__IOS_i2.Q & !iobm__IOS_i1.Q ; (1 pterm, 2 signals)
nDinLE.C = !CLK2X_IOB ; (1 pterm, 1 signal)

nDinOE = A_FSB_23_ & !nAS_FSB & nWE_FSB & A_FSB_22_ & A_FSB_21_
    # !nAS_FSB & nWE_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_
    # A_FSB_23_ & !nAS_FSB & nWE_FSB & A_FSB_20_ ; (3 pterms, 6 signals)

nDoutOE.D = !iobm__IOS_i2.Q & !iobm__IOS_i1.Q & !iobm__IOS_i0.Q
    # iobm__IOS_i2.Q & iobm__IOS_i1.Q & iobm__IOS_i0.Q
    # !iobs__IORW0_99.Q ; (3 pterms, 4 signals)
nDoutOE.C = CLK2X_IOB ; (1 pterm, 1 signal)

nLDS_IOB.D = !( !iobm__IOS_i1.Q & iobm__IOS_i0.Q & !iobs__IORW0_99.Q
       & iobs__IOL0_101.Q
    # !iobm__IOS_i2.Q & iobm__IOS_i1.Q & !iobs__IORW0_99.Q & iobs__IOL0_101.Q
    # !iobm__IOS_i2.Q & iobm__IOS_i1.Q & iobm__IOS_i0.Q & iobs__IOL0_101.Q
    # iobm__IOS_i2.Q & !iobm__IOS_i1.Q & iobs__IOL0_101.Q ) ; (4 pterms, 5 signals)
nLDS_IOB.C = !CLK2X_IOB ; (1 pterm, 1 signal)

nOE = !( !A_FSB_23_ & !nAS_FSB & !nUDS_FSB & nWE_FSB & A_FSB_22_ & A_FSB_21_
       & !cs__nOverlay_94.Q
    # !A_FSB_23_ & !nAS_FSB & !nLDS_FSB & nWE_FSB & A_FSB_22_ & A_FSB_21_
       & !cs__nOverlay_94.Q
    # !A_FSB_23_ & !nAS_FSB & !nUDS_FSB & nWE_FSB & !A_FSB_21_ & !A_FSB_20_
    # !A_FSB_23_ & !nAS_FSB & !nLDS_FSB & nWE_FSB & !A_FSB_21_ & !A_FSB_20_
    # !A_FSB_23_ & !nAS_FSB & !nUDS_FSB & nWE_FSB & !A_FSB_22_
       & cs__nOverlay_94.Q
    # !A_FSB_23_ & !nAS_FSB & !nLDS_FSB & nWE_FSB & !A_FSB_22_
       & cs__nOverlay_94.Q ) ; (6 pterms, 9 signals)

nRAMLWE = !( !nAS_FSB & !nLDS_FSB & !nWE_FSB & ram__RAMEN_146.Q ) ; (1 pterm, 4 signals)

nRAMUWE = !( !nAS_FSB & !nUDS_FSB & !nWE_FSB & ram__RAMEN_146.Q ) ; (1 pterm, 4 signals)

nRAS = !( !A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & !cs__nOverlay_94.Q
       & ram__RAMEN_146.Q
    # !A_FSB_23_ & !nAS_FSB & !A_FSB_22_ & cs__nOverlay_94.Q
       & ram__RAMEN_146.Q
    # ram__RefRAS_147.Q ) ; (3 pterms, 7 signals)

nROMCS = !( !A_FSB_23_ & A_FSB_22_ & !A_FSB_21_ & !A_FSB_20_
    # !A_FSB_23_ & !A_FSB_21_ & !A_FSB_20_ & !cs__nOverlay_94.Q ) ; (2 pterms, 5 signals)

nROMWE = !( !A_FSB_23_ & !nAS_FSB & !nUDS_FSB & !nWE_FSB & A_FSB_22_
       & !A_FSB_21_ & !A_FSB_20_
    # !A_FSB_23_ & !nAS_FSB & !nLDS_FSB & !nWE_FSB & A_FSB_22_ & !A_FSB_21_
       & !A_FSB_20_
    # !A_FSB_23_ & !nAS_FSB & !nUDS_FSB & !nWE_FSB & !A_FSB_21_ & !A_FSB_20_
       & !cs__nOverlay_94.Q
    # !A_FSB_23_ & !nAS_FSB & !nLDS_FSB & !nWE_FSB & !A_FSB_21_ & !A_FSB_20_
       & !cs__nOverlay_94.Q ) ; (4 pterms, 9 signals)

nUDS_IOB.D = !( !iobm__IOS_i1.Q & iobm__IOS_i0.Q & !iobs__IORW0_99.Q
       & iobs__IOU0_102.Q
    # !iobm__IOS_i2.Q & iobm__IOS_i1.Q & !iobs__IORW0_99.Q & iobs__IOU0_102.Q
    # !iobm__IOS_i2.Q & iobm__IOS_i1.Q & iobm__IOS_i0.Q & iobs__IOU0_102.Q
    # iobm__IOS_i2.Q & !iobm__IOS_i1.Q & iobs__IOU0_102.Q ) ; (4 pterms, 5 signals)
nUDS_IOB.C = !CLK2X_IOB ; (1 pterm, 1 signal)

nVMA_IOB.D = !( !nVPA_IOB & !iobm__ES_i4.Q & !iobm__ES_i3.Q & iobm__ES_i2.Q
       & iobm__ES_i1.Q & iobm__ES_i0.Q & iobm__IOACT_141.Q ) ; (1 pterm, 7 signals)
nVMA_IOB.C = CLK2X_IOB ; (1 pterm, 1 signal)
nVMA_IOB.CE = nVMA_IOB_0 ; (1 pterm, 1 signal)

nVMA_IOB_0 = !iobm__ES_i4.Q & !iobm__ES_i3.Q & !iobm__ES_i2.Q & !iobm__ES_i1.Q
       & !iobm__ES_i0.Q
    # !nVPA_IOB & !iobm__ES_i4.Q & !iobm__ES_i3.Q & iobm__ES_i2.Q
       & iobm__ES_i1.Q & iobm__ES_i0.Q & iobm__IOACT_141.Q ; (2 pterms, 7 signals)

nVPA_FSB.D = !( A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & A_FSB_20_
    # A_FSB_23_ & A_FSB_22_ & A_FSB_21_ & A_FSB_20_ & fsb__ASrf_44.Q ) ; (2 pterms, 6 signals)
nVPA_FSB.C = CLK_FSB ; (1 pterm, 1 signal)
nVPA_FSB.CE = nDTACK_FSB_0 ; (1 pterm, 1 signal)

ram__Once_142.D = !A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_
       & !ram__RS_i3.Q & !cs__nOverlay_94.Q & !ram__RS_i2.Q & !ram__RS_i1.Q
       & !ram__RS_i0.Q
    # !A_FSB_23_ & !nAS_FSB & !A_FSB_22_ & !ram__RS_i3.Q & cs__nOverlay_94.Q
       & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q ; (2 pterms, 9 signals)
ram__Once_142.C = CLK_FSB ; (1 pterm, 1 signal)
ram__Once_142.CE = ram__Once_142_0 ; (1 pterm, 1 signal)

ram__Once_142_0 = nAS_FSB & !fsb__ASrf_44.Q
    # !A_FSB_23_ & !nAS_FSB & !A_FSB_22_ & !ram__RS_i3.Q & cs__nOverlay_94.Q
       & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q
    # !A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & !ram__RS_i3.Q
       & !cs__nOverlay_94.Q & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q ; (3 pterms, 10 signals)

ram__RAMEN_146.D = !( !nAS_FSB & !A_FSB_21_ & !fsb__RefDone_48.Q
       & !cs__nOverlay_94.Q & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q
    # !A_FSB_23_ & nAS_FSB & A_FSB_22_ & A_FSB_21_ & !fsb__ASrf_44.Q
       & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q & !cs__nOverlay_94.Q
       & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q
    # !A_FSB_23_ & nAS_FSB & !A_FSB_22_ & !fsb__ASrf_44.Q
       & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q & cs__nOverlay_94.Q
       & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q
    # !fsb__ASrf_44.Q & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q
       & !ram__RS_i3.Q & ram__RS_i2.Q & ram__RS_i1.Q & ram__RS_i0.Q
    # !nAS_FSB & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q & !ram__RS_i3.Q
       & ram__RS_i2.Q & ram__RS_i1.Q & ram__RS_i0.Q
    # !nAS_FSB & A_FSB_22_ & !fsb__RefDone_48.Q & cs__nOverlay_94.Q
       & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q
    # !nAS_FSB & !A_FSB_22_ & !fsb__RefDone_48.Q & !cs__nOverlay_94.Q
       & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q
    # A_FSB_23_ & !nAS_FSB & !fsb__RefDone_48.Q & !ram__RS_i2.Q
       & !ram__RS_i1.Q & !ram__RS_i0.Q
    # ram__RS_i3.Q & !ram__RS_i2.Q & ram__RS_i1.Q & ram__RS_i0.Q
    # !nAS_FSB & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q & !ram__RS_i2.Q
       & !ram__RS_i1.Q & !ram__RS_i0.Q & ram__Once_142.Q
    # ram__RS_i3.Q & ram__RS_i2.Q & !ram__RS_i0.Q
    # ram__RS_i3.Q & ram__RS_i2.Q & !ram__RS_i1.Q
    # ram__RS_i3.Q & !ram__RS_i1.Q & !ram__RS_i0.Q ) ; (13 pterms, 13 signals)
ram__RAMEN_146.C = CLK_FSB ; (1 pterm, 1 signal)

ram__RAMReady_144.D = !( !A_FSB_23_ & A_FSB_22_ & A_FSB_21_ & !fsb__ASrf_44.Q
       & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q & !cs__nOverlay_94.Q
       & !ram__RS_i0.Q
    # !A_FSB_23_ & !A_FSB_22_ & !fsb__ASrf_44.Q & fsb__RefCnt_132__i7.Q
       & !fsb__RefDone_48.Q & cs__nOverlay_94.Q & !ram__RS_i0.Q
    # !fsb__ASrf_44.Q & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q
       & !ram__RS_i3.Q & ram__RS_i1.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & !fsb__RefDone_48.Q & !ram__RS_i1.Q
    # !A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & !cs__nOverlay_94.Q
       & !ram__RS_i1.Q & !ram__Once_142.Q
    # !nAS_FSB & !A_FSB_22_ & !fsb__RefDone_48.Q & !cs__nOverlay_94.Q
       & !ram__RS_i1.Q
    # !nAS_FSB & A_FSB_22_ & !fsb__RefDone_48.Q & cs__nOverlay_94.Q
       & !ram__RS_i1.Q
    # !A_FSB_23_ & !nAS_FSB & !A_FSB_22_ & cs__nOverlay_94.Q & !ram__RS_i1.Q
       & !ram__Once_142.Q
    # A_FSB_23_ & !nAS_FSB & !fsb__RefDone_48.Q & !ram__RS_i1.Q
    # ram__RS_i3.Q & !ram__RS_i1.Q
    # ram__RS_i2.Q & !ram__RS_i0.Q
    # !ram__RS_i1.Q & ram__RS_i0.Q
    # !ram__RS_i2.Q & ram__RS_i1.Q
    # !nAS_FSB & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q & !ram__RS_i3.Q ) ; (14 pterms, 13 signals)
ram__RAMReady_144.C = CLK_FSB ; (1 pterm, 1 signal)

ram__RASEL_145.D = !A_FSB_23_ & nAS_FSB & A_FSB_22_ & A_FSB_21_
       & !fsb__ASrf_44.Q & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q
       & !cs__nOverlay_94.Q & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q
    # !A_FSB_23_ & nAS_FSB & !A_FSB_22_ & !fsb__ASrf_44.Q
       & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q & cs__nOverlay_94.Q
       & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q
    # !A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & !cs__nOverlay_94.Q
       & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q & !ram__Once_142.Q
    # nAS_FSB & !fsb__ASrf_44.Q & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q
       & !ram__RS_i3.Q & ram__RS_i2.Q & ram__RS_i0.Q
    # !A_FSB_23_ & !nAS_FSB & !A_FSB_22_ & cs__nOverlay_94.Q & !ram__RS_i2.Q
       & !ram__RS_i1.Q & !ram__RS_i0.Q & !ram__Once_142.Q
    # ram__RS_i3.Q & !ram__RS_i2.Q & ram__RS_i1.Q & ram__RS_i0.Q
    # !ram__RS_i3.Q & ram__RS_i2.Q & !ram__RS_i1.Q & ram__RS_i0.Q
    # ram__RS_i3.Q & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q ; (8 pterms, 13 signals)
ram__RASEL_145.C = CLK_FSB ; (1 pterm, 1 signal)

ram__RS_i0.D = !A_FSB_23_ & nAS_FSB & A_FSB_22_ & A_FSB_21_ & !fsb__ASrf_44.Q
       & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q & !cs__nOverlay_94.Q
       & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q
    # !A_FSB_23_ & nAS_FSB & !A_FSB_22_ & !fsb__ASrf_44.Q
       & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q & cs__nOverlay_94.Q
       & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q
    # !A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & !cs__nOverlay_94.Q
       & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q & !ram__Once_142.Q
    # nAS_FSB & !fsb__ASrf_44.Q & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q
       & !ram__RS_i3.Q & ram__RS_i2.Q & ram__RS_i1.Q
    # !A_FSB_23_ & !nAS_FSB & !A_FSB_22_ & cs__nOverlay_94.Q & !ram__RS_i2.Q
       & !ram__RS_i1.Q & !ram__RS_i0.Q & !ram__Once_142.Q
    # ram__RS_i2.Q & ram__RS_i1.Q & !ram__RS_i0.Q
    # ram__RS_i3.Q & !ram__RS_i1.Q & !ram__RS_i0.Q ; (7 pterms, 13 signals)
ram__RS_i0.C = CLK_FSB ; (1 pterm, 1 signal)

ram__RS_i1.D = nAS_FSB & !fsb__ASrf_44.Q & fsb__RefCnt_132__i7.Q
       & !fsb__RefDone_48.Q & !ram__RS_i3.Q & ram__RS_i2.Q & ram__RS_i1.Q
    # !A_FSB_23_ & nAS_FSB & A_FSB_22_ & A_FSB_21_ & !fsb__ASrf_44.Q
       & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q & !cs__nOverlay_94.Q
       & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q
    # !A_FSB_23_ & nAS_FSB & !A_FSB_22_ & !fsb__ASrf_44.Q
       & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q & cs__nOverlay_94.Q
       & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q
    # ram__RS_i3.Q & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q
    # ram__RS_i2.Q & ram__RS_i1.Q & !ram__RS_i0.Q
    # ram__RS_i2.Q & !ram__RS_i1.Q & ram__RS_i0.Q ; (6 pterms, 12 signals)
ram__RS_i1.C = CLK_FSB ; (1 pterm, 1 signal)

ram__RS_i2.T = !A_FSB_23_ & !nAS_FSB & A_FSB_22_ & A_FSB_21_ & !ram__RS_i3.Q
       & !cs__nOverlay_94.Q & !ram__RS_i1.Q & !ram__RS_i0.Q & !ram__Once_142.Q
    # !A_FSB_23_ & !nAS_FSB & !A_FSB_22_ & !ram__RS_i3.Q & cs__nOverlay_94.Q
       & !ram__RS_i1.Q & !ram__RS_i0.Q & !ram__Once_142.Q
    # !ram__RS_i3.Q & ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q
    # ram__RS_i3.Q & ram__RS_i1.Q & ram__RS_i0.Q
    # ram__RS_i2.Q & ram__RS_i1.Q & ram__RS_i0.Q ; (5 pterms, 10 signals)
ram__RS_i2.C = CLK_FSB ; (1 pterm, 1 signal)

ram__RS_i3.D = !nAS_FSB & !A_FSB_21_ & !fsb__RefDone_48.Q & !cs__nOverlay_94.Q
       & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q
    # !A_FSB_23_ & nAS_FSB & A_FSB_22_ & A_FSB_21_ & !fsb__ASrf_44.Q
       & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q & !cs__nOverlay_94.Q
       & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q
    # !A_FSB_23_ & nAS_FSB & !A_FSB_22_ & !fsb__ASrf_44.Q
       & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q & cs__nOverlay_94.Q
       & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q
    # !fsb__ASrf_44.Q & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q
       & !ram__RS_i3.Q & ram__RS_i2.Q & ram__RS_i1.Q & ram__RS_i0.Q
    # !nAS_FSB & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q & !ram__RS_i3.Q
       & ram__RS_i2.Q & ram__RS_i1.Q & ram__RS_i0.Q
    # !nAS_FSB & A_FSB_22_ & !fsb__RefDone_48.Q & cs__nOverlay_94.Q
       & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q
    # !nAS_FSB & !A_FSB_22_ & !fsb__RefDone_48.Q & !cs__nOverlay_94.Q
       & !ram__RS_i2.Q & !ram__RS_i1.Q & !ram__RS_i0.Q
    # A_FSB_23_ & !nAS_FSB & !fsb__RefDone_48.Q & !ram__RS_i2.Q
       & !ram__RS_i1.Q & !ram__RS_i0.Q
    # !nAS_FSB & fsb__RefCnt_132__i7.Q & !fsb__RefDone_48.Q & !ram__RS_i2.Q
       & !ram__RS_i1.Q & !ram__RS_i0.Q & ram__Once_142.Q
    # ram__RS_i3.Q & !ram__RS_i2.Q & ram__RS_i1.Q & ram__RS_i0.Q
    # ram__RS_i3.Q & ram__RS_i2.Q & !ram__RS_i1.Q
    # ram__RS_i3.Q & ram__RS_i2.Q & !ram__RS_i0.Q
    # ram__RS_i3.Q & !ram__RS_i1.Q & !ram__RS_i0.Q ; (13 pterms, 13 signals)
ram__RS_i3.C = CLK_FSB ; (1 pterm, 1 signal)

ram__RefRAS_147.D = ram__RS_i3.Q & ram__RS_i2.Q & !ram__RS_i1.Q
       & !ram__RS_i0.Q
    # ram__RS_i3.Q & !ram__RS_i2.Q & ram__RS_i1.Q & ram__RS_i0.Q ; (2 pterms, 4 signals)
ram__RefRAS_147.C = CLK_FSB ; (1 pterm, 1 signal)




