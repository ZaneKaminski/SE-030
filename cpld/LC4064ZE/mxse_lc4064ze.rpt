|--------------------------------------------------------------|
|- ispLEVER Classic 2.0.00.17.20.15 Fitter Report File        -|
|- Copyright(C), 1992-2012, Lattice Semiconductor Corporation -|
|- All Rights Reserved.                                       -|
|--------------------------------------------------------------|




The Basic/Detailed Report Format can be selected in the dialog box
Tools->Fitter Report File Format...

Project_Summary
~~~~~~~~~~~~~~~
Project Name         :  mxse_lc4064ze
Project Path         :  C:\Users\zanek\Documents\GitHub\SE-030\cpld\LC4064ZE
Project Fitted on    :  Tue Oct 05 04:39:22 2021

Device               :  M4064_64
Package              :  100
GLB Input Mux Size   :  12
Available Blocks     :  4
Speed                :  -7.5
Part Number          :  LC4064ZE-7TN100C
Source Format        :  Pure_Verilog_HDL


// Project 'mxse_lc4064ze' Fit Successfully! //


Compilation_Times
~~~~~~~~~~~~~~~~~
Prefit Time                     0 secs
Load Design Time                0.05 secs
Partition Time                  0.05 secs
Place Time                      0.00 secs
Route Time                      0.00 secs
Total Fit Time                  00:00:01


Design_Summary
~~~~~~~~~~~~~~
Total Input Pins                27
Total Logic Functions           59
  Total Output Pins             17
  Total Bidir I/O Pins          0
  Total Buried Nodes            42
Total Flip-Flops                47
  Total D Flip-Flops            44
  Total T Flip-Flops            3
  Total Latches                 0
Total Product Terms             247

Total Reserved Pins             0
Total Locked Pins               44
Total Locked Nodes              0

Total Unique Output Enables     0
Total Unique Clocks             5
Total Unique Clock Enables      5
Total Unique Resets             1
Total Unique Presets            0

Fmax Logic Levels               2


Device_Resource_Summary
~~~~~~~~~~~~~~~~~~~~~~~
                                 Device
                                 Total    Used   Not Used   Utilization
-----------------------------------------------------------------------
Dedicated Pins
  Clock/Input Pins                  4        4      0    -->   100
  Input-Only Pins                   6        2      4    -->    33
  I/O / Enable Pins                 2        0      2    -->     0
I/O Pins                           62       38     24    -->    61
Logic Functions                    64       59      5    -->    92
  Input Registers                  64        0     64    -->     0

GLB Inputs                        144      126     18    -->    87
Logical Product Terms             320      202    118    -->    63
Occupied GLBs                       4        4      0    -->   100
Macrocells                         64       59      5    -->    92

Control Product Terms:
  GLB Clock/Clock Enables           4        4      0    -->   100
  GLB Reset/Presets                 4        0      4    -->     0
  Macrocell Clocks                 64        4     60    -->     6
  Macrocell Clock Enables          64        5     59    -->     7
  Macrocell Enables                64        0     64    -->     0
  Macrocell Resets                 64        1     63    -->     1
  Macrocell Presets                64        0     64    -->     0

Global Routing Pool               144       70     74    -->    48
  GRP from IFB                     ..       26     ..    -->    ..
    (from input signals)           ..       26     ..    -->    ..
    (from output signals)          ..        0     ..    -->    ..
    (from bidir signals)           ..        0     ..    -->    ..
  GRP from MFB                     ..       44     ..    -->    ..
----------------------------------------------------------------------

<Note> 1 : The available PT is the product term that has not been used.
<Note> 2 : IFB is I/O feedback.
<Note> 3 : MFB is macrocell feedback.



GLB_Resource_Summary
~~~~~~~~~~~~~~~~~~~~
                                                                                     # of PT
               ---  Fanin  ---    I/O    Input  Macrocells       Macrocells   Logic  clusters
             Unique Shared Total  Pins    Regs Used Inaccessible  available    PTs   used
-------------------------------------------------------------------------------------------
Maximum
  GLB                      36      *(1)     8   --     --             16       80       16
-------------------------------------------------------------------------------------------
  GLB    A      7    26    33     13/16     0   15      0              1       56       15
  GLB    B     13    18    31      7/16     0   15      0              1       43       15
  GLB    C     11    19    30      8/16     0   15      0              1       63       16
  GLB    D     14    18    32     10/16     0   14      0              2       40       14
-------------------------------------------------------------------------------------------
TOTALS:        45    81   126     38/64     0   59      0              5      202       60

<Note> 1 : For ispMACH 4000 devices, the number of IOs depends on the GLB.
<Note> 2 : Four rightmost columns above reflect last status of the placement process.



GLB_Control_Summary
~~~~~~~~~~~~~~~~~~~
           Shared Shared | Mcell  Mcell  Mcell  Mcell  Mcell 
           Clk/CE Rst/Pr | Clock  CE     Enable Reset  Preset
------------------------------------------------------------------------------
Maximum
  GLB        1      1        16     16     16     16     16  
==============================================================================
  GLB    A   1      0         1      1      0      0      0
  GLB    B   1      0         1      1      0      1      0
  GLB    C   1      0         0      2      0      0      0
  GLB    D   1      0         2      1      0      0      0
------------------------------------------------------------------------------

<Note> 1 : For ispMACH 4000 devices, the number of output enables depends on the GLB.



Optimizer_and_Fitter_Options
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Pin Assignment :                       Yes
Group Assignment :                     No
Pin Reservation :                      No

@Ignore_Project_Constraints :
  Pin Assignments :                    No
      Keep Block Assignment            --
      Keep Segment Assignment          --
  Group Assignments :                  No
  Macrocell Assignment :               No
      Keep Block Assignment            --
      Keep Segment Assignment          --

@Backannotate_Project_Constraints
  Pin Assignments :                    No
  Pin And Block Assignments :          No
  Pin, Macrocell and Block :           No

@Timing_Constraints :                  No

@Global_Project_Optimization :
  Balanced Partitioning :              No
  Spread Placement :                   Yes

  Note :
    Pack Design :
       Balanced Partitioning = No
       Spread Placement      = No
    Spread Design :
       Balanced Partitioning = Yes
       Spread Placement      = Yes


@Logic_Synthesis :
  Logic Reduction :                    Yes
  Node Collapsing :                    FMAX
  Fmax_Logic_Level :                   1
  D/T Synthesis :                      Yes
  XOR Synthesis :                      Yes
  Max. P-Term for Collapsing :         16
  Max. P-Term for Splitting :          80
  Max Symbols :                        24

@Utilization_options
  Max. % of Macrocells used :          100
@Usercode                               (HEX)
@IO_Types                              Default = LVCMOS18 (2)
@Output_Slew_Rate                      Default = FAST (2)
@Power                                 Default = HIGH (2)
@Pull                                  Default = PULLUP_DOWN (2)
@Input_Registers                       Default = None (2)
@Register_Powerup                      Default = None

Device Options:
<Note> 1 : Reserved unused I/Os can be independently driven to Low or High, and does not
           follow the drive level set for the Global Configure Unused I/O Option.
<Note> 2 : For user-specified constraints on individual signals, refer to the Output,
           Bidir and Buried Signal Lists.



Pinout_Listing
~~~~~~~~~~~~~~
      | Pin   | Bank |GLB |Assigned|                 | Signal|            | PG
Pin No| Type  |Number|Pad |Pin     |     I/O Type    | Type  | Signal name| Enable
-------------------------------------------------------------------------------------
1     | GND   |   -  |    |        |                 |       |            |
2     | TDI   |   -  |    |        |                 |       |            |
3     |  I_O  |   0  | A8 |    *   |LVCMOS18         | Input |A_FSB_9_    |
4     |  I_O  |   0  | A9 |    *   |LVCMOS18         | Input |A_FSB_10_   |
5     |  I_O  |   0  | A10|    *   |LVCMOS18         | Input |A_FSB_11_   |
6     |  I_O  |   0  | A11|    *   |LVCMOS18         | Input |A_FSB_12_   |
7     |GNDIO0 |   -  |    |        |                 |       |            |
8     |  I_O  |   0  | A12|    *   |LVCMOS18         | Input |A_FSB_13_   |
9     |  I_O  |   0  | A13|    *   |LVCMOS18         | Input |A_FSB_14_   |
10    |  I_O  |   0  | A14|    *   |LVCMOS18         | Input |A_FSB_15_   |
11    |  I_O  |   0  | A15|    *   |LVCMOS18         | Input |A_FSB_16_   |
12    | IN0   |   0  |    |    *   |LVCMOS18         | Input |A_FSB_17_   |
13    |VCCIO0 |   -  |    |        |                 |       |            |
14    |  I_O  |   0  | B15|    *   |LVCMOS18         | Input |A_FSB_18_   |
15    |  I_O  |   0  | B14|    *   |LVCMOS18         | Input |A_FSB_19_   |
16    |  I_O  |   0  | B13|        |                 |       |            |
17    |  I_O  |   0  | B12|        |                 |       |            |
18    |GNDIO0 |   -  |    |        |                 |       |            |
19    |  I_O  |   0  | B11|        |                 |       |            |
20    |  I_O  |   0  | B10|        |                 |       |            |
21    |  I_O  |   0  | B9 |        |                 |       |            |
22    |  I_O  |   0  | B8 |        |                 |       |            |
23    | IN1   |   0  |    |        |                 |       |            |
24    | TCK   |   -  |    |        |                 |       |            |
25    | VCC   |   -  |    |        |                 |       |            |
26    | GND   |   -  |    |        |                 |       |            |
27    | IN2   |   0  |    |    *   |LVCMOS18         | Input |A_FSB_21_   |
28    |  I_O  |   0  | B7 |    *   |LVCMOS18         | Input |A_FSB_20_   |
29    |  I_O  |   0  | B6 |        |                 |       |            |
30    |  I_O  |   0  | B5 |    *   |LVCMOS18         | Input |A_FSB_22_   |
31    |  I_O  |   0  | B4 |        |                 |       |            |
32    |GNDIO0 |   -  |    |        |                 |       |            |
33    |VCCIO0 |   -  |    |        |                 |       |            |
34    |  I_O  |   0  | B3 |    *   |LVCMOS18         | Input |A_FSB_23_   |
35    |  I_O  |   0  | B2 |    *   |LVCMOS18         | Input |nAS_FSB     |
36    |  I_O  |   0  | B1 |    *   |LVCMOS18         | Input |E_IOB       |
37    |  I_O  |   0  | B0 |        |                 |       |            |
38    |INCLK1 |   0  |    |    *   |LVCMOS18         | Input |CLK_FSB     |
39    |INCLK2 |   1  |    |    *   |LVCMOS18         | Input |CLK_IOB     |
40    | VCC   |   -  |    |        |                 |       |            |
41    |  I_O  |   1  | C0 |    *   |LVCMOS18         | Output|nBERR_FSB   |
42    |  I_O  |   1  | C1 |        |                 |       |            |
43    |  I_O  |   1  | C2 |        |                 |       |            |
44    |  I_O  |   1  | C3 |    *   |LVCMOS18         | Input |nBERR_IOB   |
45    |VCCIO1 |   -  |    |        |                 |       |            |
46    |GNDIO1 |   -  |    |        |                 |       |            |
47    |  I_O  |   1  | C4 |        |                 |       |            |
48    |  I_O  |   1  | C5 |    *   |LVCMOS18         | Input |nDTACK_IOB  |
49    |  I_O  |   1  | C6 |        |                 |       |            |
50    |  I_O  |   1  | C7 |    *   |LVCMOS18         | Input |nLDS_FSB    |
51    | GND   |   -  |    |        |                 |       |            |
52    | TMS   |   -  |    |        |                 |       |            |
53    |  I_O  |   1  | C8 |        |                 |       |            |
54    |  I_O  |   1  | C9 |    *   |LVCMOS18         | Input |nUDS_FSB    |
55    |  I_O  |   1  | C10|        |                 |       |            |
56    |  I_O  |   1  | C11|    *   |LVCMOS18         | Input |nVPA_IOB    |
57    |GNDIO1 |   -  |    |        |                 |       |            |
58    |  I_O  |   1  | C12|    *   |LVCMOS18         | Input |nWE_FSB     |
59    |  I_O  |   1  | C13|        |                 |       |            |
60    |  I_O  |   1  | C14|    *   |LVCMOS18         | Output|nADoutLE0   |
61    |  I_O  |   1  | C15|        |                 |       |            |
62    | IN3   |   1  |    |        |                 |       |            |
63    |VCCIO1 |   -  |    |        |                 |       |            |
64    |  I_O  |   1  | D15|    *   |LVCMOS18         | Output|nAS_IOB     |
65    |  I_O  |   1  | D14|    *   |LVCMOS18         | Output|nADoutLE1   |
66    |  I_O  |   1  | D13|    *   |LVCMOS18         | Output|nAoutOE     |
67    |  I_O  |   1  | D12|        |                 |       |            |
68    |GNDIO1 |   -  |    |        |                 |       |            |
69    |  I_O  |   1  | D11|        |                 |       |            |
70    |  I_O  |   1  | D10|        |                 |       |            |
71    |  I_O  |   1  | D9 |        |                 |       |            |
72    |  I_O  |   1  | D8 |        |                 |       |            |
73    | IN4   |   1  |    |        |                 |       |            |
74    | TDO   |   -  |    |        |                 |       |            |
75    | VCC   |   -  |    |        |                 |       |            |
76    | GND   |   -  |    |        |                 |       |            |
77    | IN5   |   1  |    |        |                 |       |            |
78    |  I_O  |   1  | D7 |    *   |LVCMOS18         | Output|nDinOE      |
79    |  I_O  |   1  | D6 |    *   |LVCMOS18         | Output|nDinLE      |
80    |  I_O  |   1  | D5 |    *   |LVCMOS18         | Output|nDoutOE     |
81    |  I_O  |   1  | D4 |    *   |LVCMOS18         | Output|nDTACK_FSB  |
82    |GNDIO1 |   -  |    |        |                 |       |            |
83    |VCCIO1 |   -  |    |        |                 |       |            |
84    |  I_O  |   1  | D3 |    *   |LVCMOS18         | Output|nRAMLWE     |
85    |  I_O  |   1  | D2 |    *   |LVCMOS18         | Output|nLDS_IOB    |
86    |  I_O  |   1  | D1 |    *   |LVCMOS18         | Output|nRAMOE      |
87    | I_O/OE|   1  | D0 |        |                 |       |            |
88    |INCLK3 |   1  |    |    *   |LVCMOS18         | Input |CLK2X_IOB   |
89    |INCLK0 |   0  |    |    *   |LVCMOS18         | Input |nRES        |
90    | VCC   |   -  |    |        |                 |       |            |
91    | I_O/OE|   0  | A0 |        |                 |       |            |
92    |  I_O  |   0  | A1 |    *   |LVCMOS18         | Output|nRAMUWE     |
93    |  I_O  |   0  | A2 |        |                 |       |            |
94    |  I_O  |   0  | A3 |    *   |LVCMOS18         | Output|nROMOE      |
95    |VCCIO0 |   -  |    |        |                 |       |            |
96    |GNDIO0 |   -  |    |        |                 |       |            |
97    |  I_O  |   0  | A4 |    *   |LVCMOS18         | Output|nROMWE      |
98    |  I_O  |   0  | A5 |    *   |LVCMOS18         | Output|nUDS_IOB    |
99    |  I_O  |   0  | A6 |        |                 |       |            |
100   |  I_O  |   0  | A7 |    *   |LVCMOS18         | Output|nVMA_IOB    |
-------------------------------------------------------------------------------------

<Note> GLB Pad : This notation refers to the GLB I/O pad number in the device.
<Note> Assigned Pin : user or dedicated input assignment (E.g. Clock pins).
<Note> Pin Type : 
          ClkIn : Dedicated input or clock pin 
           CLK  : Dedicated clock pin
           I_O  : Input/Output pin
           INP  : Dedicated input pin
           JTAG : JTAG Control and test pin
           NC   : No connected



Input_Signal_List
~~~~~~~~~~~~~~~~~
                Input
         Pin    Fanout
 Pin GLB Type           Pullup Signal
-----------------------------------------
   4   A  I/O   1 ---D    Down A_FSB_10_
   5   A  I/O   1 ---D    Down A_FSB_11_
   6   A  I/O   1 ---D    Down A_FSB_12_
   8   A  I/O   1 ---D    Down A_FSB_13_
   9   A  I/O   1 ---D    Down A_FSB_14_
  10   A  I/O   1 ---D    Down A_FSB_15_
  11   A  I/O   3 A-CD    Down A_FSB_16_
  12  --  IN    3 A-CD    Down A_FSB_17_
  14   B  I/O   3 A-CD    Down A_FSB_18_
  15   B  I/O   3 A-CD    Down A_FSB_19_
  28   B  I/O   4 ABCD    Down A_FSB_20_
  27  --  IN    4 ABCD    Down A_FSB_21_
  30   B  I/O   4 ABCD    Down A_FSB_22_
  34   B  I/O   4 ABCD    Down A_FSB_23_
   3   A  I/O   1 ---D    Down A_FSB_9_
  88  -- INCLK  3 AB-D    Down CLK2X_IOB
  38  -- INCLK    ----    Down CLK_FSB
  39  -- INCLK  1 -B--    Down CLK_IOB
  36   B  I/O   1 --C-    Down E_IOB
  35   B  I/O   4 ABCD    Down nAS_FSB
  44   C  I/O   2 -BC-    Down nBERR_IOB
  48   C  I/O   1 -B--    Down nDTACK_IOB
  50   C  I/O   3 -BCD    Down nLDS_FSB
  89  -- INCLK  1 -B--    Down nRES
  54   C  I/O   2 A-C-    Down nUDS_FSB
  56   C  I/O   1 A---    Down nVPA_IOB
  58   C  I/O   3 A-CD    Down nWE_FSB
-----------------------------------------



Output_Signal_List
~~~~~~~~~~~~~~~~~~
          I         C      P R P       O Output
          N         L Mc   R E U C O F B Fanout
 Pin GLB  P LL PTs  S Type E S P E E P P         Slew Pullup Signal
-----------------------------------------------------------------------
  60   C  2  -   1  1 COM                  ----  Fast   Down nADoutLE0
  65   D  1  -   1  1 COM                  ----  Fast   Down nADoutLE1
  64   D  4  1   2  1 DFF      R           ----  Fast   Down nAS_IOB
  66   D  0  -   0  1 COM                  ----  Fast   Down nAoutOE
  41   C  5  2   2  1 COM                  ----  Fast   Down nBERR_FSB
  81   D 23  1  12  3 DFF      R         2 --CD  Fast   Down nDTACK_FSB
  79   D  3  1   1  1 DFF      R           ----  Fast   Down nDinLE
  78   D  3  2   1  1 COM                  ----  Fast   Down nDinOE
  80   D  5  1   4  2 DFF      R           ----  Fast   Down nDoutOE
  85   D  6  1   4  1 DFF      R           ----  Fast   Down nLDS_IOB
  84   D  6  1   2  1 COM                  ----  Fast   Down nRAMLWE
  86   D  6  1   2  1 COM                  ----  Fast   Down nRAMOE
  92   A  6  1   2  1 COM                  ----  Fast   Down nRAMUWE
  94   A  7  1   2  1 COM                  ----  Fast   Down nROMOE
  97   A  7  1   2  1 COM                  ----  Fast   Down nROMWE
  98   A  6  1   5  2 DFF      R           ----  Fast   Down nUDS_IOB
 100   A  9  1   2  1 TFF      R         1 A---  Fast   Down nVMA_IOB
-----------------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        FP = Fast path used
       OBP = ORP bypass used



Bidir_Signal_List
~~~~~~~~~~~~~~~~~
          I         C      P R P       O Bidir
          N         L Mc   R E U C O F B Fanout
 Pin GLB  P LL PTs  S Type E S P E E P P         Slew Pullup Signal
-------------------------------------------------------------------
-------------------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        FP = Fast path used
       OBP = ORP bypass used



Buried_Signal_List
~~~~~~~~~~~~~~~~~~
        I         C      P R P       Node
        N         L Mc   R E U C I F Fanout
Mc GLB  P LL PTs  S Type E S P E R P         Signal
-----------------------------------------------------------
 9   D 10  -   4  1 COM              2 --CD  IOCS_i
 5   B  7  1   3  1 DFF    * R       2 -B-D  cs_nOverlay0
10   D  3  1   2  1 DFF      R *     3 A-CD  cs_nOverlay1
11   D  1  -   1  1 DFF      R       3 -BCD  fsb_ASrf
14   B  1  1   1  1 DFF      R       1 -B--  fsb_RefCnt_0_
12   B  2  1   2  1 DFF      R       1 -B--  fsb_RefCnt_1_
 8   B  3  1   3  1 DFF      R       1 -B--  fsb_RefCnt_2_
 2   B  4  1   4  1 DFF      R       1 -B--  fsb_RefCnt_3_
 9   B  5  1   2  1 DFF      R       1 -B--  fsb_RefCnt_4_
13   B  5  1   1  1 TFF      R       1 -B--  fsb_RefCnt_5_
 6   B  9  1   3  1 DFF      R       2 -B-D  fsb_TimeoutA
 7   B 10  1   3  1 DFF      R       2 -BC-  fsb_TimeoutB
11   B  5  1   2  1 DFF      R       1 --C-  iobm_ALE0
12   A  8  1   4  1 DFF      R       1 A---  iobm_ES_0_
14   A  5  1   3  1 DFF      R       1 A---  iobm_ES_1_
 0   A  8  1   5  1 DFF      R       1 A---  iobm_ES_2_
11   A  7  1   5  1 DFF      R       1 A---  iobm_ES_3_
13   A  8  1   4  1 TFF      R       1 A---  iobm_ES_4_
 8   A  6  1   1  1 DFF      R       1 -B--  iobm_ETACK
 8   C  1  -   1  1 DFF      R       1 A---  iobm_Er
 6   A  2  1   1  1 DFF      R       1 A---  iobm_Er2
 0   B  9  1   5  1 DFF      R       1 A---  iobm_IOACT
10   B  2  1   2  1 DFF      R       1 -B--  iobm_IOREQr
 1   B  9  1   5  1 DFF      R       3 AB-D  iobm_IOS_0_
 3   B  8  1   4  1 DFF      R       3 AB-D  iobm_IOS_1_
 8   D  4  1   4  1 DFF      R       3 AB-D  iobm_IOS_2_
 7   C  2  1   1  1 DFF      R       1 --C-  iobs_ALE0
 2   C 15  1  10  3 DFF      R       4 ABCD  iobs_ALE1
10   A  1  1   1  1 DFF      R       1 --C-  iobs_IOACTr
 4   B  5  1   3  1 DFF      R *     1 ---D  iobs_IOL0
10   C  2  -   1  1 DFF      R *     1 -B--  iobs_IOL1
14   C  6  1   3  1 DFF      R       2 --CD  iobs_IORDReady
 9   C 16  1   7  2 DFF      R       1 -B--  iobs_IOREQ
 2   A 17  1  11  3 DFF      R *     2 A--D  iobs_IORW0
 3   C  2  -   2  1 DFF      R *     1 A---  iobs_IORW1
 5   C 15  -   8  2 COM              1 --C-  iobs_IORW1_0
 6   C  5  1   3  2 DFF      R *     1 A---  iobs_IOU0
12   C  2  -   1  1 DFF      R *     1 --C-  iobs_IOU1
 9   A 15  1   8  2 DFF      R       1 --C-  iobs_Load1
 4   C 16  1  10  2 DFF      R       2 A-C-  iobs_Once
13   C 16  1   6  2 DFF      R       3 ABC-  iobs_PS_0_
11   C 16  1   7  2 DFF      R       3 ABC-  iobs_PS_1_
-----------------------------------------------------------

<Note> CLS = Number of clusters used
       INP = Number of input signals
       PTs = Number of product terms
        LL = Number of logic levels
       PRE = Has preset equation
       RES = Has reset equation
       PUP = Power-Up initial state: R=Reset, S=Set
        CE = Has clock enable equation
        OE = Has output enable equation
        IR = Input register
        FP = Fast path used
       OBP = ORP bypass used



PostFit_Equations
~~~~~~~~~~~~~~~~~
IOCS_i = !( !nWE_FSB & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_ & A_FSB_19_
       & A_FSB_18_ & A_FSB_17_ & A_FSB_16_ & cs_nOverlay1.Q
    # !nWE_FSB & A_FSB_22_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_ & A_FSB_17_
       & A_FSB_16_ & !cs_nOverlay1.Q
    # A_FSB_22_ & !A_FSB_21_ & A_FSB_20_
    # A_FSB_23_ ) ; (4 pterms, 10 signals)

cs_nOverlay0.D = !A_FSB_23_ & !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & !A_FSB_20_
    # cs_nOverlay0.Q ; (2 pterms, 6 signals)
cs_nOverlay0.C = CLK_FSB ; (1 pterm, 1 signal)
cs_nOverlay0.AR = !nRES ; (1 pterm, 1 signal)

cs_nOverlay1.D = cs_nOverlay0.Q ; (1 pterm, 1 signal)
cs_nOverlay1.C = CLK_FSB ; (1 pterm, 1 signal)
cs_nOverlay1.CE = nAS_FSB & !fsb_ASrf.Q ; (1 pterm, 2 signals)

fsb_ASrf.D = !nAS_FSB ; (1 pterm, 1 signal)
fsb_ASrf.C = !CLK_FSB ; (1 pterm, 1 signal)

fsb_RefCnt_0_.D = !fsb_RefCnt_0_.Q ; (1 pterm, 1 signal)
fsb_RefCnt_0_.C = CLK_FSB ; (1 pterm, 1 signal)

fsb_RefCnt_1_.D = fsb_RefCnt_1_.Q & !fsb_RefCnt_0_.Q
    # !fsb_RefCnt_1_.Q & fsb_RefCnt_0_.Q ; (2 pterms, 2 signals)
fsb_RefCnt_1_.C = CLK_FSB ; (1 pterm, 1 signal)

fsb_RefCnt_2_.D = fsb_RefCnt_1_.Q & !fsb_RefCnt_2_.Q & fsb_RefCnt_0_.Q
    # !fsb_RefCnt_1_.Q & fsb_RefCnt_2_.Q
    # fsb_RefCnt_2_.Q & !fsb_RefCnt_0_.Q ; (3 pterms, 3 signals)
fsb_RefCnt_2_.C = CLK_FSB ; (1 pterm, 1 signal)

fsb_RefCnt_3_.D = fsb_RefCnt_1_.Q & fsb_RefCnt_2_.Q & fsb_RefCnt_0_.Q
       & !fsb_RefCnt_3_.Q
    # !fsb_RefCnt_0_.Q & fsb_RefCnt_3_.Q
    # !fsb_RefCnt_2_.Q & fsb_RefCnt_3_.Q
    # !fsb_RefCnt_1_.Q & fsb_RefCnt_3_.Q ; (4 pterms, 4 signals)
fsb_RefCnt_3_.C = CLK_FSB ; (1 pterm, 1 signal)

fsb_RefCnt_4_.D.X1 = fsb_RefCnt_1_.Q & fsb_RefCnt_2_.Q & fsb_RefCnt_0_.Q
       & fsb_RefCnt_3_.Q ; (1 pterm, 4 signals)
fsb_RefCnt_4_.D.X2 = fsb_RefCnt_4_.Q ; (1 pterm, 1 signal)
fsb_RefCnt_4_.C = CLK_FSB ; (1 pterm, 1 signal)

fsb_RefCnt_5_.T = fsb_RefCnt_1_.Q & fsb_RefCnt_2_.Q & fsb_RefCnt_0_.Q
       & fsb_RefCnt_4_.Q & fsb_RefCnt_3_.Q ; (1 pterm, 5 signals)
fsb_RefCnt_5_.C = CLK_FSB ; (1 pterm, 1 signal)

fsb_TimeoutA.D = !nAS_FSB & !fsb_RefCnt_5_.Q & !fsb_RefCnt_1_.Q
       & !fsb_RefCnt_2_.Q & !fsb_RefCnt_0_.Q & !fsb_RefCnt_4_.Q
       & !fsb_RefCnt_3_.Q
    # fsb_TimeoutA.Q & fsb_ASrf.Q
    # !nAS_FSB & fsb_TimeoutA.Q ; (3 pterms, 9 signals)
fsb_TimeoutA.C = CLK_FSB ; (1 pterm, 1 signal)

fsb_TimeoutB.D = !nAS_FSB & fsb_TimeoutA.Q & !fsb_RefCnt_5_.Q
       & !fsb_RefCnt_1_.Q & !fsb_RefCnt_2_.Q & !fsb_RefCnt_0_.Q
       & !fsb_RefCnt_4_.Q & !fsb_RefCnt_3_.Q
    # fsb_TimeoutB.Q & fsb_ASrf.Q
    # !nAS_FSB & fsb_TimeoutB.Q ; (3 pterms, 10 signals)
fsb_TimeoutB.C = CLK_FSB ; (1 pterm, 1 signal)

iobm_ALE0.D = !( !iobm_IOREQr.Q & !iobm_IOS_0_.Q & !iobm_IOS_1_.Q
       & !iobm_IOS_2_.Q
    # iobm_IOS_1_.Q & iobm_IOS_2_.Q ) ; (2 pterms, 4 signals)
iobm_ALE0.C = CLK2X_IOB ; (1 pterm, 1 signal)

iobm_ES_0_.D = !( iobm_Er.Q & !iobm_ES_2_.Q & !iobm_ES_1_.Q & !iobm_ES_3_.Q
       & !iobm_ES_4_.Q
    # !iobm_ES_2_.Q & !iobm_ES_1_.Q & !iobm_ES_3_.Q & !iobm_ES_4_.Q
       & !iobm_Er2.Q
    # iobm_Er.Q & iobm_ES_0_.Q
    # iobm_ES_0_.Q & !iobm_Er2.Q ) ; (4 pterms, 7 signals)
iobm_ES_0_.C = CLK2X_IOB ; (1 pterm, 1 signal)

iobm_ES_1_.D = !( !iobm_ES_0_.Q & !iobm_ES_1_.Q
    # iobm_ES_0_.Q & iobm_ES_1_.Q
    # !iobm_Er.Q & iobm_Er2.Q ) ; (3 pterms, 4 signals)
iobm_ES_1_.C = CLK2X_IOB ; (1 pterm, 1 signal)

iobm_ES_2_.D = !( !iobm_ES_2_.Q & !iobm_ES_3_.Q & iobm_ES_4_.Q
    # iobm_ES_2_.Q & iobm_ES_0_.Q & iobm_ES_1_.Q
    # !iobm_ES_2_.Q & !iobm_ES_1_.Q
    # !iobm_ES_2_.Q & !iobm_ES_0_.Q
    # !iobm_Er.Q & iobm_Er2.Q ) ; (5 pterms, 7 signals)
iobm_ES_2_.C = CLK2X_IOB ; (1 pterm, 1 signal)

iobm_ES_3_.D = !( iobm_ES_2_.Q & iobm_ES_0_.Q & iobm_ES_1_.Q & iobm_ES_3_.Q
    # !iobm_ES_1_.Q & !iobm_ES_3_.Q
    # !iobm_ES_0_.Q & !iobm_ES_3_.Q
    # !iobm_ES_2_.Q & !iobm_ES_3_.Q
    # !iobm_Er.Q & iobm_Er2.Q ) ; (5 pterms, 6 signals)
iobm_ES_3_.C = CLK2X_IOB ; (1 pterm, 1 signal)

iobm_ES_4_.T = iobm_Er.Q & iobm_ES_2_.Q & iobm_ES_0_.Q & iobm_ES_1_.Q
       & iobm_ES_3_.Q
    # !iobm_ES_2_.Q & iobm_ES_0_.Q & iobm_ES_1_.Q & !iobm_ES_3_.Q
       & iobm_ES_4_.Q
    # iobm_ES_2_.Q & iobm_ES_0_.Q & iobm_ES_1_.Q & iobm_ES_3_.Q & !iobm_Er2.Q
    # !iobm_Er.Q & iobm_ES_4_.Q & iobm_Er2.Q ; (4 pterms, 7 signals)
iobm_ES_4_.C = CLK2X_IOB ; (1 pterm, 1 signal)

iobm_ETACK.D = !nVMA_IOB.Q & !iobm_ES_0_.Q & !iobm_ES_1_.Q & !iobm_ES_3_.Q
       & iobm_ES_4_.Q ; (1 pterm, 5 signals)
iobm_ETACK.C = CLK2X_IOB ; (1 pterm, 1 signal)

iobm_Er.D = E_IOB ; (1 pterm, 1 signal)
iobm_Er.C = !CLK_IOB ; (1 pterm, 1 signal)

iobm_Er2.D = iobm_Er.Q ; (1 pterm, 1 signal)
iobm_Er2.C = CLK2X_IOB ; (1 pterm, 1 signal)

iobm_IOACT.D = !( !iobm_IOREQr.Q & !iobm_IOS_0_.Q & !iobm_IOS_1_.Q
       & !iobm_IOS_2_.Q
    # CLK_IOB & !nBERR_IOB & iobm_IOS_0_.Q & iobm_IOS_2_.Q
    # CLK_IOB & !nDTACK_IOB & iobm_IOS_0_.Q & iobm_IOS_2_.Q
    # CLK_IOB & iobm_IOS_0_.Q & iobm_IOS_2_.Q & iobm_ETACK.Q
    # iobm_IOS_1_.Q & iobm_IOS_2_.Q ) ; (5 pterms, 8 signals)
iobm_IOACT.C = CLK2X_IOB ; (1 pterm, 1 signal)

iobm_IOREQr.D = iobs_IOREQ.Q ; (1 pterm, 1 signal)
iobm_IOREQr.C = !CLK2X_IOB ; (1 pterm, 1 signal)

iobm_IOS_0_.D = nDTACK_IOB & nBERR_IOB & !iobm_IOS_1_.Q & iobm_IOS_2_.Q
       & !iobm_ETACK.Q
    # !CLK_IOB & !iobm_IOS_1_.Q & iobm_IOS_2_.Q
    # !CLK_IOB & iobm_IOREQr.Q & !iobm_IOS_0_.Q
    # !iobm_IOS_0_.Q & iobm_IOS_1_.Q
    # !iobm_IOS_0_.Q & iobm_IOS_2_.Q ; (5 pterms, 8 signals)
iobm_IOS_0_.C = CLK2X_IOB ; (1 pterm, 1 signal)

iobm_IOS_1_.D = !( nDTACK_IOB & nBERR_IOB & !iobm_IOS_1_.Q & iobm_IOS_2_.Q
       & !iobm_ETACK.Q
    # !CLK_IOB & !iobm_IOS_1_.Q & iobm_IOS_2_.Q
    # iobm_IOS_0_.Q & iobm_IOS_1_.Q
    # !iobm_IOS_0_.Q & !iobm_IOS_1_.Q ) ; (4 pterms, 7 signals)
iobm_IOS_1_.C = CLK2X_IOB ; (1 pterm, 1 signal)

iobm_IOS_2_.D = iobm_IOS_0_.Q & iobm_IOS_1_.Q & !iobm_IOS_2_.Q
    # !iobm_IOS_1_.Q & iobm_IOS_2_.Q
    # !iobm_IOS_0_.Q & iobm_IOS_2_.Q ; (3 pterms, 3 signals)
iobm_IOS_2_.C = CLK2X_IOB ; (1 pterm, 1 signal)

iobs_ALE0.D = iobs_PS_1_.Q & iobs_PS_0_.Q ; (1 pterm, 2 signals)
iobs_ALE0.C = CLK_FSB ; (1 pterm, 1 signal)

iobs_ALE1.D = !nAS_FSB & !nWE_FSB & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & A_FSB_17_ & A_FSB_16_ & !iobs_ALE1.Q
       & iobs_PS_1_.Q & !iobs_Once.Q & cs_nOverlay1.Q
    # !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & A_FSB_17_ & A_FSB_16_ & !iobs_ALE1.Q & iobs_PS_1_.Q & !iobs_Once.Q
       & !cs_nOverlay1.Q
    # !nAS_FSB & !nWE_FSB & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_ & A_FSB_19_
       & A_FSB_18_ & A_FSB_17_ & A_FSB_16_ & !iobs_ALE1.Q & !iobs_Once.Q
       & iobs_PS_0_.Q & cs_nOverlay1.Q
    # !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & A_FSB_17_ & A_FSB_16_ & !iobs_ALE1.Q & !iobs_Once.Q & iobs_PS_0_.Q
       & !cs_nOverlay1.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs_ALE1.Q
       & iobs_PS_1_.Q & !iobs_Once.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs_ALE1.Q
       & !iobs_Once.Q & iobs_PS_0_.Q
    # A_FSB_23_ & !nAS_FSB & !iobs_ALE1.Q & iobs_PS_1_.Q & !iobs_Once.Q
    # A_FSB_23_ & !nAS_FSB & !iobs_ALE1.Q & !iobs_Once.Q & iobs_PS_0_.Q
    # iobs_ALE1.Q & !iobs_PS_0_.Q
    # iobs_ALE1.Q & !iobs_PS_1_.Q ; (10 pterms, 15 signals)
iobs_ALE1.C = CLK_FSB ; (1 pterm, 1 signal)

iobs_IOACTr.D = iobm_IOACT.Q ; (1 pterm, 1 signal)
iobs_IOACTr.C = CLK_FSB ; (1 pterm, 1 signal)

iobs_IOL0.D = !nLDS_FSB & !iobs_ALE1.Q
    # iobs_ALE1.Q & iobs_IOL1.Q ; (2 pterms, 3 signals)
iobs_IOL0.C = CLK_FSB ; (1 pterm, 1 signal)
iobs_IOL0.CE = iobs_PS_1_.Q & iobs_PS_0_.Q ; (1 pterm, 2 signals)

iobs_IOL1.D = !nLDS_FSB ; (1 pterm, 1 signal)
iobs_IOL1.C = CLK_FSB ; (1 pterm, 1 signal)
iobs_IOL1.CE = iobs_Load1.Q ; (1 pterm, 1 signal)

iobs_IORDReady.D = !nAS_FSB & !iobs_IOACTr.Q & !iobs_PS_1_.Q & iobs_Once.Q
    # fsb_ASrf.Q & iobs_IORDReady.Q
    # !nAS_FSB & iobs_IORDReady.Q ; (3 pterms, 6 signals)
iobs_IORDReady.C = CLK_FSB ; (1 pterm, 1 signal)

iobs_IOREQ.D = !nAS_FSB & !nWE_FSB & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & A_FSB_17_ & A_FSB_16_ & !iobs_PS_1_.Q
       & !iobs_Once.Q & !iobs_PS_0_.Q & cs_nOverlay1.Q
    # !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & A_FSB_17_ & A_FSB_16_ & !iobs_PS_1_.Q & !iobs_Once.Q & !iobs_PS_0_.Q
       & !cs_nOverlay1.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs_PS_1_.Q
       & !iobs_Once.Q & !iobs_PS_0_.Q
    # A_FSB_23_ & !nAS_FSB & !iobs_PS_1_.Q & !iobs_Once.Q & !iobs_PS_0_.Q
    # iobs_ALE1.Q & !iobs_PS_1_.Q & !iobs_PS_0_.Q
    # iobs_PS_1_.Q & iobs_PS_0_.Q
    # !iobs_IOACTr.Q & iobs_PS_1_.Q ; (7 pterms, 16 signals)
iobs_IOREQ.C = CLK_FSB ; (1 pterm, 1 signal)

iobs_IORW0.D = !( !nAS_FSB & !nWE_FSB & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & A_FSB_17_ & A_FSB_16_ & !iobs_ALE1.Q
       & !iobs_Once.Q & cs_nOverlay1.Q
    # !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & A_FSB_17_ & A_FSB_16_ & !iobs_ALE1.Q & !iobs_Once.Q & !cs_nOverlay1.Q
    # !nAS_FSB & !nWE_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs_ALE1.Q
       & !iobs_Once.Q
    # A_FSB_23_ & !nAS_FSB & !nWE_FSB & !iobs_ALE1.Q & !iobs_Once.Q
    # !A_FSB_23_ & !A_FSB_20_ & !iobs_IORW0.Q & !iobs_ALE1.Q
    # !A_FSB_23_ & A_FSB_21_ & !iobs_IORW0.Q & !iobs_ALE1.Q
    # !A_FSB_23_ & !A_FSB_22_ & !iobs_IORW0.Q & !iobs_ALE1.Q
    # iobs_ALE1.Q & !iobs_IORW1.Q
    # !iobs_IORW0.Q & !iobs_ALE1.Q & iobs_Once.Q
    # nAS_FSB & !iobs_IORW0.Q & !iobs_ALE1.Q ) ; (10 pterms, 15 signals)
iobs_IORW0.C = CLK_FSB ; (1 pterm, 1 signal)
iobs_IORW0.CE = !iobs_PS_1_.Q & !iobs_PS_0_.Q ; (1 pterm, 2 signals)

iobs_IORW1.D = nWE_FSB ; (1 pterm, 1 signal)
iobs_IORW1.C = CLK_FSB ; (1 pterm, 1 signal)
iobs_IORW1.CE = iobs_IORW1_0 ; (1 pterm, 1 signal)

iobs_IORW1_0 = A_FSB_23_ & !nAS_FSB & !iobs_ALE1.Q & iobs_PS_1_.Q
       & !iobs_Once.Q
    # A_FSB_23_ & !nAS_FSB & !iobs_ALE1.Q & !iobs_Once.Q & iobs_PS_0_.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs_ALE1.Q
       & iobs_PS_1_.Q & !iobs_Once.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs_ALE1.Q
       & !iobs_Once.Q & iobs_PS_0_.Q
    # !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & A_FSB_17_ & A_FSB_16_ & !iobs_ALE1.Q & iobs_PS_1_.Q & !iobs_Once.Q
       & !cs_nOverlay1.Q
    # !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & A_FSB_17_ & A_FSB_16_ & !iobs_ALE1.Q & !iobs_Once.Q & iobs_PS_0_.Q
       & !cs_nOverlay1.Q
    # !nAS_FSB & !nWE_FSB & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_ & A_FSB_19_
       & A_FSB_18_ & A_FSB_17_ & A_FSB_16_ & !iobs_ALE1.Q & iobs_PS_1_.Q
       & !iobs_Once.Q & cs_nOverlay1.Q
    # !nAS_FSB & !nWE_FSB & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_ & A_FSB_19_
       & A_FSB_18_ & A_FSB_17_ & A_FSB_16_ & !iobs_ALE1.Q & !iobs_Once.Q
       & iobs_PS_0_.Q & cs_nOverlay1.Q ; (8 pterms, 15 signals)

iobs_IOU0.D = !nUDS_FSB & !iobs_ALE1.Q
    # iobs_ALE1.Q & iobs_IOU1.Q ; (2 pterms, 3 signals)
iobs_IOU0.C = CLK_FSB ; (1 pterm, 1 signal)
iobs_IOU0.CE = iobs_PS_1_.Q & iobs_PS_0_.Q ; (1 pterm, 2 signals)

iobs_IOU1.D = !nUDS_FSB ; (1 pterm, 1 signal)
iobs_IOU1.C = CLK_FSB ; (1 pterm, 1 signal)
iobs_IOU1.CE = iobs_Load1.Q ; (1 pterm, 1 signal)

iobs_Load1.D = !nAS_FSB & !nWE_FSB & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & A_FSB_17_ & A_FSB_16_ & !iobs_ALE1.Q
       & !iobs_Once.Q & iobs_PS_0_.Q & cs_nOverlay1.Q
    # !nAS_FSB & !nWE_FSB & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_ & A_FSB_19_
       & A_FSB_18_ & A_FSB_17_ & A_FSB_16_ & !iobs_ALE1.Q & iobs_PS_1_.Q
       & !iobs_Once.Q & cs_nOverlay1.Q
    # !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & A_FSB_17_ & A_FSB_16_ & !iobs_ALE1.Q & !iobs_Once.Q & iobs_PS_0_.Q
       & !cs_nOverlay1.Q
    # !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & A_FSB_17_ & A_FSB_16_ & !iobs_ALE1.Q & iobs_PS_1_.Q & !iobs_Once.Q
       & !cs_nOverlay1.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs_ALE1.Q
       & !iobs_Once.Q & iobs_PS_0_.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs_ALE1.Q
       & iobs_PS_1_.Q & !iobs_Once.Q
    # A_FSB_23_ & !nAS_FSB & !iobs_ALE1.Q & !iobs_Once.Q & iobs_PS_0_.Q
    # A_FSB_23_ & !nAS_FSB & !iobs_ALE1.Q & iobs_PS_1_.Q & !iobs_Once.Q ; (8 pterms, 15 signals)
iobs_Load1.C = CLK_FSB ; (1 pterm, 1 signal)

iobs_Once.D = !nAS_FSB & !nWE_FSB & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & A_FSB_17_ & A_FSB_16_ & !iobs_PS_1_.Q
       & !iobs_PS_0_.Q & cs_nOverlay1.Q
    # !nAS_FSB & !nWE_FSB & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_ & A_FSB_19_
       & A_FSB_18_ & A_FSB_17_ & A_FSB_16_ & !iobs_ALE1.Q & cs_nOverlay1.Q
    # !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & A_FSB_17_ & A_FSB_16_ & !iobs_PS_1_.Q & !iobs_PS_0_.Q
       & !cs_nOverlay1.Q
    # !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & A_FSB_17_ & A_FSB_16_ & !iobs_ALE1.Q & !cs_nOverlay1.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs_PS_1_.Q
       & !iobs_PS_0_.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs_ALE1.Q
    # A_FSB_23_ & !nAS_FSB & !iobs_PS_1_.Q & !iobs_PS_0_.Q
    # fsb_ASrf.Q & iobs_Once.Q
    # A_FSB_23_ & !nAS_FSB & !iobs_ALE1.Q
    # !nAS_FSB & iobs_Once.Q ; (10 pterms, 16 signals)
iobs_Once.C = CLK_FSB ; (1 pterm, 1 signal)

iobs_PS_0_.D = !nAS_FSB & !nWE_FSB & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & A_FSB_17_ & A_FSB_16_ & !iobs_PS_1_.Q
       & !iobs_Once.Q & !iobs_PS_0_.Q & cs_nOverlay1.Q
    # !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & A_FSB_17_ & A_FSB_16_ & !iobs_PS_1_.Q & !iobs_Once.Q & !iobs_PS_0_.Q
       & !cs_nOverlay1.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs_PS_1_.Q
       & !iobs_Once.Q & !iobs_PS_0_.Q
    # A_FSB_23_ & !nAS_FSB & !iobs_PS_1_.Q & !iobs_Once.Q & !iobs_PS_0_.Q
    # iobs_IOACTr.Q & iobs_PS_1_.Q & !iobs_PS_0_.Q
    # iobs_ALE1.Q & !iobs_PS_1_.Q & !iobs_PS_0_.Q ; (6 pterms, 16 signals)
iobs_PS_0_.C = CLK_FSB ; (1 pterm, 1 signal)

iobs_PS_1_.D = !nAS_FSB & !nWE_FSB & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & A_FSB_17_ & A_FSB_16_ & !iobs_PS_1_.Q
       & !iobs_Once.Q & !iobs_PS_0_.Q & cs_nOverlay1.Q
    # !nAS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & A_FSB_17_ & A_FSB_16_ & !iobs_PS_1_.Q & !iobs_Once.Q & !iobs_PS_0_.Q
       & !cs_nOverlay1.Q
    # !nAS_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & !iobs_PS_1_.Q
       & !iobs_Once.Q & !iobs_PS_0_.Q
    # A_FSB_23_ & !nAS_FSB & !iobs_PS_1_.Q & !iobs_Once.Q & !iobs_PS_0_.Q
    # iobs_ALE1.Q & !iobs_PS_1_.Q & !iobs_PS_0_.Q
    # iobs_IOACTr.Q & iobs_PS_0_.Q
    # !iobs_IOACTr.Q & iobs_PS_1_.Q ; (7 pterms, 16 signals)
iobs_PS_1_.C = CLK_FSB ; (1 pterm, 1 signal)

nADoutLE0 = !iobs_ALE0.Q & !iobm_ALE0.Q ; (1 pterm, 2 signals)

nADoutLE1 = !iobs_ALE1.Q ; (1 pterm, 1 signal)

nAS_IOB.D = !iobm_IOS_0_.Q & !iobm_IOS_1_.Q & !iobm_IOS_2_.Q
    # iobm_IOS_1_.Q & iobm_IOS_2_.Q ; (2 pterms, 3 signals)
nAS_IOB.C = !CLK2X_IOB ; (1 pterm, 1 signal)

nAoutOE = 0 ; (0 pterm, 0 signal)

nBERR_FSB = !( !nAS_FSB & !nBERR_IOB & nDTACK_FSB.Q & !IOCS_i
    # !nAS_FSB & nDTACK_FSB.Q & fsb_TimeoutB.Q & IOCS_i ) ; (2 pterms, 5 signals)

nDTACK_FSB.D = !A_FSB_23_ & !nWE_FSB & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_
       & A_FSB_19_ & A_FSB_18_ & A_FSB_17_ & A_FSB_16_ & A_FSB_15_
       & !A_FSB_14_ & A_FSB_13_ & !A_FSB_12_ & !A_FSB_11_ & !A_FSB_10_
       & A_FSB_9_ & nDTACK_FSB.Q & !fsb_TimeoutA.Q & cs_nOverlay1.Q
    # !A_FSB_23_ & !nWE_FSB & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_ & A_FSB_19_
       & A_FSB_18_ & A_FSB_17_ & A_FSB_16_ & A_FSB_15_ & A_FSB_14_ & A_FSB_13_
       & A_FSB_12_ & A_FSB_11_ & A_FSB_10_ & A_FSB_9_ & nDTACK_FSB.Q
       & !fsb_TimeoutA.Q & cs_nOverlay1.Q
    # !A_FSB_23_ & !nWE_FSB & A_FSB_22_ & A_FSB_21_ & A_FSB_20_ & A_FSB_19_
       & A_FSB_18_ & A_FSB_17_ & A_FSB_16_ & A_FSB_15_ & !A_FSB_14_
       & A_FSB_13_ & !A_FSB_12_ & !A_FSB_11_ & !A_FSB_10_ & A_FSB_9_
       & nDTACK_FSB.Q & !fsb_TimeoutA.Q & !cs_nOverlay1.Q
    # !A_FSB_23_ & !nWE_FSB & A_FSB_22_ & A_FSB_21_ & A_FSB_20_ & A_FSB_19_
       & A_FSB_18_ & A_FSB_17_ & A_FSB_16_ & A_FSB_15_ & A_FSB_14_ & A_FSB_13_
       & A_FSB_12_ & A_FSB_11_ & A_FSB_10_ & A_FSB_9_ & nDTACK_FSB.Q
       & !fsb_TimeoutA.Q & !cs_nOverlay1.Q
    # !nWE_FSB & !A_FSB_22_ & A_FSB_21_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_
       & A_FSB_17_ & A_FSB_16_ & nDTACK_FSB.Q & iobs_ALE1.Q & cs_nOverlay1.Q
    # !nWE_FSB & A_FSB_22_ & A_FSB_20_ & A_FSB_19_ & A_FSB_18_ & A_FSB_17_
       & A_FSB_16_ & nDTACK_FSB.Q & iobs_ALE1.Q & !cs_nOverlay1.Q
    # nWE_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & nDTACK_FSB.Q
       & !iobs_IORDReady.Q
    # !nWE_FSB & A_FSB_22_ & !A_FSB_21_ & A_FSB_20_ & nDTACK_FSB.Q
       & iobs_ALE1.Q
    # A_FSB_23_ & nWE_FSB & nDTACK_FSB.Q & !iobs_IORDReady.Q
    # A_FSB_23_ & !nWE_FSB & nDTACK_FSB.Q & iobs_ALE1.Q
    # nAS_FSB & !fsb_ASrf.Q
    # nAS_FSB & nDTACK_FSB.Q ; (12 pterms, 23 signals)
nDTACK_FSB.C = CLK_FSB ; (1 pterm, 1 signal)

nDinLE.D = !iobm_IOS_1_.Q & iobm_IOS_2_.Q ; (1 pterm, 2 signals)
nDinLE.C = !CLK2X_IOB ; (1 pterm, 1 signal)

nDinOE = !nAS_FSB & nWE_FSB & !IOCS_i ; (1 pterm, 3 signals)

nDoutOE.D = !iobm_IOS_0_.Q & !iobm_IOS_1_.Q & !iobm_IOS_2_.Q
    # iobm_IOS_0_.Q & iobm_IOS_1_.Q & iobm_IOS_2_.Q
    # !iobs_IORW0.Q ; (3 pterms, 4 signals)
nDoutOE.C = CLK2X_IOB ; (1 pterm, 1 signal)

nLDS_IOB.D = !( !iobs_IORW0.Q & iobs_IOL0.Q & iobm_IOS_0_.Q & !iobm_IOS_2_.Q
    # iobs_IOL0.Q & !iobm_IOS_1_.Q & iobm_IOS_2_.Q
    # iobs_IOL0.Q & iobm_IOS_0_.Q & iobm_IOS_1_.Q & !iobm_IOS_2_.Q
    # !iobs_IORW0.Q & iobs_IOL0.Q & iobm_IOS_1_.Q & !iobm_IOS_2_.Q ) ; (4 pterms, 5 signals)
nLDS_IOB.C = !CLK2X_IOB ; (1 pterm, 1 signal)

nRAMLWE = !( !A_FSB_23_ & !nLDS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_21_
       & !cs_nOverlay1.Q
    # !A_FSB_23_ & !nLDS_FSB & !nWE_FSB & !A_FSB_22_ & cs_nOverlay1.Q ) ; (2 pterms, 6 signals)

nRAMOE = !( !A_FSB_23_ & !nAS_FSB & nWE_FSB & A_FSB_22_ & A_FSB_21_
       & !cs_nOverlay1.Q
    # !A_FSB_23_ & !nAS_FSB & nWE_FSB & !A_FSB_22_ & cs_nOverlay1.Q ) ; (2 pterms, 6 signals)

nRAMUWE = !( !A_FSB_23_ & !nUDS_FSB & !nWE_FSB & A_FSB_22_ & A_FSB_21_
       & !cs_nOverlay1.Q
    # !A_FSB_23_ & !nUDS_FSB & !nWE_FSB & !A_FSB_22_ & cs_nOverlay1.Q ) ; (2 pterms, 6 signals)

nROMOE = !( !A_FSB_23_ & !nAS_FSB & nWE_FSB & A_FSB_22_ & !A_FSB_21_
       & !A_FSB_20_
    # !A_FSB_23_ & !nAS_FSB & nWE_FSB & !A_FSB_21_ & !A_FSB_20_
       & !cs_nOverlay1.Q ) ; (2 pterms, 7 signals)

nROMWE = !( !A_FSB_23_ & !nAS_FSB & !nWE_FSB & A_FSB_22_ & !A_FSB_21_
       & !A_FSB_20_
    # !A_FSB_23_ & !nAS_FSB & !nWE_FSB & !A_FSB_21_ & !A_FSB_20_
       & !cs_nOverlay1.Q ) ; (2 pterms, 7 signals)

nUDS_IOB.D = !( !iobs_IORW0.Q & iobs_IOU0.Q & iobm_IOS_0_.Q & !iobm_IOS_2_.Q
    # iobs_IOU0.Q & !iobm_IOS_1_.Q & iobm_IOS_2_.Q
    # iobs_IOU0.Q & iobm_IOS_0_.Q & iobm_IOS_1_.Q & !iobm_IOS_2_.Q
    # !iobs_IORW0.Q & iobs_IOU0.Q & iobm_IOS_1_.Q & !iobm_IOS_2_.Q ) ; (4 pterms, 5 signals)
nUDS_IOB.C = !CLK2X_IOB ; (1 pterm, 1 signal)

nVMA_IOB.T = !nVPA_IOB & nVMA_IOB.Q & iobm_IOACT.Q & iobm_ES_2_.Q
       & iobm_ES_0_.Q & iobm_ES_1_.Q & !iobm_ES_3_.Q & !iobm_ES_4_.Q
    # !nVMA_IOB.Q & !iobm_ES_2_.Q & !iobm_ES_0_.Q & !iobm_ES_1_.Q
       & !iobm_ES_3_.Q & !iobm_ES_4_.Q ; (2 pterms, 8 signals)
nVMA_IOB.C = CLK2X_IOB ; (1 pterm, 1 signal)




